{"version":3,"file":"js/serviceWorker.js","mappings":"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","sources":["webpack://Plug-and-Play-Template/./node_modules/core-js/internals/a-callable.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/add-to-unscopables.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/an-object.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/array-includes.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/classof-raw.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/create-property-descriptor.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/define-built-in.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/descriptors.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/document-create-element.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/engine-user-agent.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/engine-v8-version.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/enum-bug-keys.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/export.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/fails.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/function-bind-native.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/function-call.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/function-name.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/function-uncurry-this.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/get-built-in.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/get-method.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/global.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/has-own-property.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/hidden-keys.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/html.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/ie8-dom-define.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/indexed-object.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/inspect-source.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/internal-state.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/is-callable.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/is-forced.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/is-object.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/is-pure.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/is-symbol.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/length-of-array-like.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/make-built-in.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/native-symbol.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/native-weak-map.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-create.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-define-properties.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-define-property.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-keys-internal.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-keys.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/own-keys.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/require-object-coercible.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/set-global.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/shared-key.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/shared-store.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/shared.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/to-absolute-index.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/to-indexed-object.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/to-length.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/to-object.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/to-primitive.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/to-property-key.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/try-to-string.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/uid.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://Plug-and-Play-Template/./node_modules/core-js/internals/well-known-symbol.js","webpack://Plug-and-Play-Template/./node_modules/core-js/modules/es.array.includes.js","webpack://Plug-and-Play-Template/./node_modules/workbox-cacheable-response/_version.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_version.js","webpack://Plug-and-Play-Template/./node_modules/workbox-expiration/_version.js","webpack://Plug-and-Play-Template/./node_modules/workbox-routing/_version.js","webpack://Plug-and-Play-Template/./node_modules/workbox-strategies/_version.js","webpack://Plug-and-Play-Template/webpack/bootstrap","webpack://Plug-and-Play-Template/webpack/runtime/global","webpack://Plug-and-Play-Template/./node_modules/workbox-core/models/messages/messages.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/models/messages/messageGenerator.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_private/WorkboxError.js","webpack://Plug-and-Play-Template/./node_modules/workbox-routing/utils/constants.js","webpack://Plug-and-Play-Template/./node_modules/workbox-routing/utils/normalizeHandler.js","webpack://Plug-and-Play-Template/./node_modules/workbox-routing/Route.js","webpack://Plug-and-Play-Template/./node_modules/workbox-routing/RegExpRoute.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_private/getFriendlyURL.js","webpack://Plug-and-Play-Template/./node_modules/workbox-routing/Router.js","webpack://Plug-and-Play-Template/./node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","webpack://Plug-and-Play-Template/./node_modules/workbox-routing/registerRoute.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_private/cacheNames.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_private/Deferred.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/models/quotaErrorCallbacks.js","webpack://Plug-and-Play-Template/./node_modules/workbox-strategies/StrategyHandler.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_private/timeout.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","webpack://Plug-and-Play-Template/./node_modules/workbox-strategies/Strategy.js","webpack://Plug-and-Play-Template/./node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","webpack://Plug-and-Play-Template/./node_modules/workbox-strategies/NetworkFirst.js","webpack://Plug-and-Play-Template/./node_modules/workbox-cacheable-response/CacheableResponse.js","webpack://Plug-and-Play-Template/./node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/_private/dontWaitFor.js","webpack://Plug-and-Play-Template/./node_modules/idb/build/esm/wrap-idb-value.js","webpack://Plug-and-Play-Template/./node_modules/idb/build/esm/index.js","webpack://Plug-and-Play-Template/./node_modules/workbox-expiration/models/CacheTimestampsModel.js","webpack://Plug-and-Play-Template/./node_modules/workbox-expiration/CacheExpiration.js","webpack://Plug-and-Play-Template/./src/modules/edify/js/serviceWorker.js","webpack://Plug-and-Play-Template/./node_modules/workbox-strategies/StaleWhileRevalidate.js","webpack://Plug-and-Play-Template/./node_modules/workbox-expiration/ExpirationPlugin.js","webpack://Plug-and-Play-Template/./node_modules/workbox-core/registerQuotaErrorCallback.js"],"sourcesContent":["var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar TypeError = global.TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw TypeError(tryToString(argument) + ' is not a function');\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar String = global.String;\nvar TypeError = global.TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw TypeError(String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar setGlobal = require('../internals/set-global');\n\nmodule.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var name = options && options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return O;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n  return O;\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n  options.name        - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es-x/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar bind = FunctionPrototype.bind;\nvar call = FunctionPrototype.call;\nvar uncurryThis = NATIVE_BIND && bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? function (fn) {\n  return fn && uncurryThis(fn);\n} : function (fn) {\n  return fn && function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return func == null ? undefined : aCallable(func);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es-x/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es-x/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","module.exports = {};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar Object = global.Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : Object(it);\n} : Object;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = uncurryThis(store.get);\n  var wmhas = uncurryThis(store.has);\n  var wmset = uncurryThis(store.set);\n  set = function (it, metadata) {\n    if (wmhas(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = function (argument) {\n  return typeof argument == 'function';\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = false;\n","var global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Object = global.Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (String(name).slice(0, 7) === 'Symbol(') {\n    name = '[' + String(name).replace(/^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    defineProperty(value, 'name', { value: name, configurable: true });\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  if (options && hasOwn(options, 'constructor') && options.constructor) {\n    if (DESCRIPTORS) try {\n      defineProperty(value, 'prototype', { writable: false });\n    } catch (error) { /* empty */ }\n  } else value.prototype = undefined;\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","/* eslint-disable es-x/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es-x/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));\n","/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es-x/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es-x/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar TypeError = global.TypeError;\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es-x/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es-x/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es-x/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar TypeError = global.TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","var global = require('../internals/global');\n\nvar TypeError = global.TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.22.5',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.22.5/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- safe\n  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var global = require('../internals/global');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar Object = global.Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TypeError = global.TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var global = require('../internals/global');\n\nvar String = global.String;\n\nmodule.exports = function (argument) {\n  try {\n    return String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es-x/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar fails = require('../internals/fails');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:6.5.2'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.5.2'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.5.2'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.5.2'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.5.2'] && _();\n}\ncatch (e) { }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-first-falling-back-to-cache)\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({\n            timeoutId,\n            request,\n            logs,\n            handler,\n        });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return ((await handler.waitUntil(Promise.race(promises))) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                (await networkPromise));\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler, }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler, }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            if (fetchError instanceof Error) {\n                error = fetchError;\n            }\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` + ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` + JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` + JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ${response.status}`);\n                logger.log(`Response headers: ` + JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse, } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db\n            .transaction(CACHE_OBJECT_STORE)\n            .store.index('timestamp')\n            .openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds\n            ? Date.now() - this._maxAgeSeconds * 1000\n            : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ? 'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - this._maxAgeSeconds * 1000;\n            return timestamp !== undefined ? timestamp < expireOlderThan : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/* eslint-disable no-restricted-globals */\n// This file has the global service worker for edify, it needs some modification for each install as documented in the documentation site\nimport { registerRoute } from 'workbox-routing';\nimport { NetworkFirst, StaleWhileRevalidate } from 'workbox-strategies';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response';\nimport { ExpirationPlugin } from 'workbox-expiration';\n\nconst DS_ENDPOINTS = [\n    'https://au-1a144ffb.datastore.squiz.cloud',\n    'https://au-103caaad.datastore.squiz.cloud',\n    'https://au-deca5cbb.datastore.squiz.cloud',\n    'https://au-fef19d82.datastore.squiz.cloud',\n];\n\n// Set the service worker to skip waiting\nself.addEventListener('install', () => {\n    // The promise that skipWaiting() returns can be safely ignored.\n    self.skipWaiting();\n});\n\nregisterRoute(\n    // Check to see if the request is a navigation to a new page\n    ({ request, url }) =>\n        request.mode === 'navigate' &&\n        !url?.pathname?.includes('_admin') &&\n        !url?.pathname?.includes('_performance') &&\n        !url?.pathname?.includes('_nocache') &&\n        !url?.pathname?.includes('_recache'),\n    // Use a Network First caching strategy\n    new NetworkFirst({\n        // Put all cached files in a cache named 'pages'\n        cacheName: 'pages',\n        plugins: [\n            // Ensure that only requests that result in a 200 status are cached\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n        ],\n    })\n);\n\n// Cache CSS, JS, and Web Worker requests with a Stale While Revalidate strategy\nregisterRoute(\n    // Check to see if the request's destination is style for stylesheets, script for JavaScript, or worker for web worker\n    ({ request, url }) =>\n        (request.destination === 'style' ||\n            request.destination === 'script' ||\n            request.destination === 'worker') &&\n        !url?.pathname?.includes('__lib'),\n    // Use a Stale While Revalidate caching strategy\n    new NetworkFirst({\n        // Put all cached files in a cache named 'assets'\n        cacheName: 'assets',\n        plugins: [\n            // Ensure that only requests that result in a 200 status are cached\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n        ],\n    })\n);\n\n// Ceche datastore requests with a Network First stratergy\nregisterRoute(\n    ({ url }) =>\n        // Change this to the correct data store endpoint when deployed\n        DS_ENDPOINTS.includes(url.origin),\n    // Use a network first (request from DS, then fallback to cache if there is no network)\n    new NetworkFirst({\n        cacheName: 'datastore-cache',\n        plugins: [\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n        ],\n    })\n);\n\n// Cache images with a Cache First strategy\nregisterRoute(\n    // Check to see if the request's destination is for an image (note that this won't work unless the media site has the same root as the service worker)\n    ({ request }) => request.destination === '_media',\n    // Use a Cache First caching strategy\n    new StaleWhileRevalidate({\n        // Put all cached files in a cache named 'images'\n        cacheName: 'images',\n        plugins: [\n            // Ensure that only requests that result in a 200 status are cached\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n            // Don't cache more than 50 items, and expire them after 30 days\n            new ExpirationPlugin({\n                maxEntries: 50,\n                maxAgeSeconds: 60 * 60 * 24 * 30, // 30 Days\n            }),\n        ],\n    })\n);\n\n// Skip waiting for updates\naddEventListener('message', (event) => {\n    if (event.data && event.data.type === 'SKIP_WAITING') {\n        self.skipWaiting();\n    }\n});\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate](https://developer.chrome.com/docs/workbox/reference/workbox-strategies/#type-StaleWhileRevalidate)\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler.fetchAndCachePut(request).catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        void handler.waitUntil(fetchAndCachePromise);\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = (await fetchAndCachePromise);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached response is used or updated, this plugin will look\n * at the associated cache and remove any old or extra responses.\n *\n * When using `maxAgeSeconds`, responses may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached response has been used. If the response has a \"Date\" header, then\n * a light weight expiration check is performed and the response will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse, }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request, }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - this._maxAgeSeconds * 1000;\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n"],"names":["global","isCallable","tryToString","TypeError","module","exports","argument","wellKnownSymbol","create","definePropertyModule","UNSCOPABLES","ArrayPrototype","Array","prototype","undefined","f","configurable","value","key","isObject","String","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","O","length","index","includes","indexOf","uncurryThis","toString","stringSlice","slice","it","hasOwn","ownKeys","getOwnPropertyDescriptorModule","target","source","exceptions","keys","defineProperty","getOwnPropertyDescriptor","i","DESCRIPTORS","createPropertyDescriptor","object","bitmap","enumerable","writable","createNonEnumerableProperty","makeBuiltIn","setGlobal","options","unsafe","simple","noTargetGet","name","fails","Object","get","document","EXISTS","createElement","getBuiltIn","match","version","userAgent","process","Deno","versions","v8","split","defineBuiltIn","copyConstructorProperties","isForced","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","forced","sham","exec","error","test","bind","hasOwnProperty","NATIVE_BIND","call","Function","apply","arguments","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","fn","aFunction","namespace","method","aCallable","V","P","func","check","Math","globalThis","window","self","g","this","toObject","a","classof","propertyIsEnumerable","store","functionToString","inspectSource","set","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","state","wmget","wmhas","wmset","metadata","facade","STATE","enforce","getterFor","TYPE","type","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","isPrototypeOf","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","CONFIGURABLE_FUNCTION_NAME","InternalStateModule","enforceInternalState","getInternalState","CONFIGURABLE_LENGTH","TEMPLATE","getter","setter","arity","constructor","join","V8_VERSION","getOwnPropertySymbols","symbol","Symbol","activeXDocument","anObject","definePropertiesModule","enumBugKeys","html","documentCreateElement","IE_PROTO","EmptyConstructor","scriptTag","content","LT","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObject","ActiveXObject","iframeDocument","iframe","domain","style","display","appendChild","src","contentWindow","open","F","Properties","result","V8_PROTOTYPE_DEFINE_BUG","objectKeys","defineProperties","props","IE8_DOM_DEFINE","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","internalObjectKeys","concat","getOwnPropertyNames","push","names","$propertyIsEnumerable","NASHORN_BUG","input","pref","val","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","uid","SHARED","IS_PURE","mode","copyright","license","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","ceil","floor","number","isSymbol","getMethod","ordinaryToPrimitive","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","WellKnownSymbolsStore","symbolFor","createWellKnownSymbol","withoutSetter","description","$","$includes","addToUnscopables","proto","_","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","messageGenerator","code","args","msg","JSON","stringify","Error","errorCode","details","super","normalizeHandler","handler","handle","setCatchHandler","catchHandler","RegExpRoute","regExp","url","href","origin","location","getFriendlyURL","URL","RegExp","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","payload","requestPromises","Promise","all","urlsToCache","map","entry","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","err","reject","_catchHandler","catch","async","catchErr","matchResult","isArray","setDefaultHandler","registerRoute","unregisterRoute","routeIndex","splice","defaultRouter","capture","captureUrl","moduleName","funcName","paramName","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","cacheNames","userCacheName","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","delete","Deferred","promise","resolve","quotaErrorCallbacks","Set","toRequest","StrategyHandler","strategy","_cacheKeys","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","thrownErrorMessage","message","pluginFilteredRequest","fetchResponse","fetch","fetchOptions","callback","response","runCallbacks","responseClone","cachePut","cachedResponse","matchOptions","effectiveRequest","getCacheKey","multiMatchOptions","caches","ms","setTimeout","responseToCache","_ensureResponseSafeToCache","cache","hasCacheUpdateCallback","oldResponse","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","cacheKey","cacheMatchIgnoreParams","put","executeQuotaErrorCallbacks","newResponse","statefulCallback","statefulParam","shift","destroy","pluginsUsed","status","responseDone","handleAll","_getResponse","_awaitComplete","_handle","doneWaiting","waitUntilError","cacheOkAndOpaquePlugin","cacheWillUpdate","NetworkFirst","some","p","unshift","_networkTimeoutSeconds","networkTimeoutSeconds","logs","promises","timeoutId","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","cacheMatch","fetchAndCachePut","fetchError","clearTimeout","CacheableResponse","config","_statuses","statuses","_headers","headers","isResponseCacheable","cacheable","headerName","CacheableResponsePlugin","_cacheableResponse","dontWaitFor","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","wrapFunction","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","done","unlisten","removeEventListener","complete","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","c","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","targetFuncName","useIndex","isWrite","storeName","oldTraps","CACHE_OBJECT_STORE","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_db","_cacheName","_upgradeDb","db","objStore","createObjectStore","keyPath","createIndex","unique","_upgradeDbAndDeleteOldDbs","blocked","indexedDB","deleteDatabase","deleteDB","timestamp","_getId","getDb","durability","minTimestamp","maxCount","cursor","openCursor","entriesToDelete","entriesNotDeletedCount","urlsDeleted","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","openDB","CacheExpiration","_isRunning","_rerunRequested","_maxEntries","maxEntries","_maxAgeSeconds","maxAgeSeconds","_matchOptions","_timestampModel","Date","now","urlsExpired","expireEntries","setTimestamp","getTimestamp","expireOlderThan","Infinity","DS_ENDPOINTS","skipWaiting","pathname","destination","fetchAndCachePromise","cachedResponseWillBeUsed","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","updateTimestamp","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","add","registerQuotaErrorCallback","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","headerTime","getTime","isNaN"],"sourceRoot":""}