{"version":3,"file":"js/524-1943f1d9159dedbe99e3.js","mappings":"uNA2Ce,SAASA,EAAKC,GACzB,MAAM,QAAEC,EAAO,cAAEC,IAAkBC,EAAAA,EAAAA,MAC7B,GAAEC,EAAE,MAAEC,EAAK,UAAEC,EAAS,WAAEC,EAAU,UAAEC,EAAS,YAAEC,GAAgBT,EAErE,OAAKC,EAAQM,IAA8C,IAA/BN,EAAQM,GAAYG,OAK5C,uBAAKN,GAAK,cAAaA,IAAME,UAAW,CAAE,kCAAkCA,GAAWK,KAAK,KAAMC,KAAK,YACnG,sBAAIN,UAAU,yCAAyCD,GACtDJ,EAAQM,IACLN,EAAQM,GAAYM,KAAI,CAACC,EAAMC,IA7C/C,SAAiBf,GACb,MAAM,KAAEc,EAAI,MAAEC,EAAK,YAAEN,EAAW,cAAEP,EAAa,UAAEM,GAAcR,GACzD,OACFgB,EACAC,MAAM,MAAEC,EAAK,SAAEC,IACfL,EAEJ,OACI,uBACIV,GAAK,GAAEW,IACPH,KAAK,MACLQ,IAAKZ,EACLa,IAAM,mBAAkBN,IACxB,gBAAeb,IAAkBa,EACjCT,UAAU,6CACVgB,QAAUC,GAAMd,EAAYc,EAAG,IAAKT,EAAMI,UAC1CM,UAAYD,GAAMd,EAAYc,EAAG,IAAKT,EAAMI,UAC5CO,UAAW,GAEX,uBAAKnB,UAAU,gCAAgCM,KAAK,YAC/CM,GACG,qBAAGA,MAAOA,EAAOZ,UAAU,8BAA8BoB,KAAMV,GAC1DE,EACAC,EAASQ,WACN,uBAAKrB,UAAU,kCA5B3C,SAAkBsB,GAA0B,IAArBC,EAAgB,UAAH,6CAAG,IACnC,OAAOD,EAAIlB,OAASmB,EAAiB,GAAED,EAAIE,UAAU,EAAGD,QAAsBD,CAClF,CA0B6EG,CAASZ,EAASQ,UAAUhB,KAAK,KAAM,QAOpH,CAeoBqB,CAAQ,CACJlB,OACAC,QACAN,cACAP,gBACAM,iBAbT,IAkBf,CAEA,MAAM,OAAEyB,EAAM,OAAEC,EAAM,KAAEC,GAASC,IAEjCrC,EAAKsC,UAAY,CACbjC,GAAI6B,EAAOK,WACXjC,MAAO4B,EACP3B,UAAW2B,EACX1B,WAAY2B,EAAOI,WACnB9B,UAAW2B,EAAKG,YAGpBvC,EAAKwC,aAAe,CAChBlC,MAAQ,GACRC,UAAY,G","sources":["webpack://template-stencils/./src/modules/autocomplete-concierge/jsx/templates/faqs--v15.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../StoreProvider';\n\n// Truncates strings longer than 255 characters so that it does\n// not take up too much space in the user interface.\nfunction truncate(str, numCharacters = 250) {\n    return str.length > numCharacters ? `${str.substring(0, numCharacters)}...` : str;\n}\n\nfunction partial(props) {\n    const { data, index, handleClick, selectedIndex, childRefs } = props;\n    const {\n        action,\n        disp: { title, metaData },\n    } = data;\n\n    return (\n        <div\n            id={`${index}`}\n            role=\"row\"\n            ref={childRefs}\n            key={`result-programs-${index}`}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item\"\n            onClick={(e) => handleClick(e, { ...data, title })}\n            onKeyDown={(e) => handleClick(e, { ...data, title })}\n            tabIndex={-1}\n        >\n            <div className=\"autocomplete-results__details\" role=\"gridcell\">\n                {title && (\n                    <a title={title} className=\"autocomplete-results__title\" href={action}>\n                        {title}\n                        {metaData.faqAnswer && (\n                            <div className=\"autocomplete-results__metadata\">{truncate(metaData.faqAnswer.join(','), 100)}</div>\n                        )}\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default function Faqs(props) {\n    const { results, selectedIndex } = useStore();\n    const { id, label, className, templateId, childRefs, handleClick } = props;\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div id={`result-row-${id}`} className={[`autocomplete-concierge__section`, className].join(' ')} role=\"rowgroup\">\n            <h2 className=\"autocomplete-concierge__section-title\">{label}</h2>\n            {results[templateId] &&\n                results[templateId].map((data, index) =>\n                    partial({\n                        data,\n                        index,\n                        handleClick,\n                        selectedIndex,\n                        childRefs,\n                    })\n                )}\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nFaqs.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n};\n\nFaqs.defaultProps = {\n    label: ``,\n    className: ``,\n};\n"],"names":["Faqs","props","results","selectedIndex","useStore","id","label","className","templateId","childRefs","handleClick","length","join","role","map","data","index","action","disp","title","metaData","ref","key","onClick","e","onKeyDown","tabIndex","href","faqAnswer","str","numCharacters","substring","truncate","partial","string","number","func","PropTypes","propTypes","isRequired","defaultProps"],"sourceRoot":""}