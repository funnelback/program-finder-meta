{"version":3,"file":"js/AutocompleteProvider-d535b219af7d7d959644.js","mappings":"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","sources":["webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/data/AutocompleteService.js","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/autocomplete.jsx","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/reducer.js","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/store.jsx","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/ lazy ^\\.\\/.*$ namespace object"],"sourcesContent":["/*!\n * @license\n * Copyright Squiz Australia Pty Ltd. All Rights Reserved.\n */\n\n/* eslint-disable import/prefer-default-export */\n\nexport class AutocompleteService {\n    constructor(adapters) {\n        if (!adapters || adapters.length === 0) {\n            throw new Error(\n                `At least one adapter is required for AutocompleteService`\n            );\n        }\n\n        this.autocompleteAdapters = [];\n\n        Array.from(adapters).forEach((adapter) => {\n            // eslint-disable-next-line no-prototype-builtins\n            if (!adapter || !adapter.hasOwnProperty('autocomplete')) {\n                throw new Error(\n                    `${adapter.constructor.name} is not implemented yet`\n                );\n            } else {\n                this.registerAdapter(adapter);\n            }\n        });\n    }\n\n    registerAdapter(adapter) {\n        this.autocompleteAdapters.push(adapter);\n    }\n\n    /**\n     * Get search results.\n     *\n     * @param {string} args query string.\n     * @param {function} mockFn Unit test mock function.\n     *\n     * @returns {Promise<array>} A promised list of search results.\n     */\n    getResults(args, mockFn) {\n        return Promise.all(\n            this.autocompleteAdapters.map((adapter) =>\n                adapter.getResults(args, mockFn)\n            )\n        )\n            .then((result) => {\n                const mappedResults = [];\n                let resultsCount = 0;\n                let i = 0;\n\n                // Match each result with its template id.\n                result.map(({ data }, idx) => {\n                    resultsCount += data.length;\n                    mappedResults[idx] = [];\n                    if (data.length) {\n                        data.forEach((element) => {\n                            // eslint-disable-next-line no-plusplus\n                            mappedResults[idx][i++] = element;\n                        });\n                    }\n                    return mappedResults;\n                });\n\n                return { results: mappedResults, count: resultsCount };\n            })\n            .catch((error) => {\n                /* eslint-disable no-console */\n                console.error(error);\n                return { results: [], count: 0, error };\n            });\n    }\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable camelcase */\nimport React, {\n    useState,\n    useEffect,\n    useMemo,\n    Suspense,\n    lazy,\n    useRef,\n    useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useKeyboard, useFocusWithin } from '@react-aria/interactions';\nimport { DismissButton } from '@react-aria/overlays';\n\nimport { AutocompleteService } from '../data/AutocompleteService';\nimport { useStore, StoreProvider } from './store';\nimport { initialState, searchReducer } from './reducer';\nimport { useArrayRef, getParam, getTracker } from './helpers';\n\n/**\n * Lazy load result templates. We could not use standard hook to load, as we need to pass array of refs.\n * With memo we caching function but still have ability to rebuild props when refs are changed.\n *\n * @param {object} props Object with props we want to pass into component.\n *\n * @returns {JSX.Element}\n * @constructor\n */\nconst LoadTemplates = (props) => {\n    const { template } = props;\n    const componentName = template.toLowerCase();\n    const DynamicComponent = useMemo(\n        () => lazy(() => import(`./templates/${componentName}`)),\n        []\n    );\n\n    return (\n        <Suspense\n            key={`component-${componentName}`}\n            fallback={<span className=\"sr-only\">Loading template...</span>}\n        >\n            <DynamicComponent {...props} />\n        </Suspense>\n    );\n};\n\n/**\n * Loading indicator.\n *\n * @param {bool} fetching Flag indicating loading state.\n * @param {function} onSubmit Callback function to execute when submit event occur.\n * @param {string} componentId Id of the component.\n *\n * @return {JSX.Element}\n * @constructor\n */\nconst Loader = ({ fetching, onSubmit, componentId }) => {\n    if (fetching) {\n        return (\n            <div className=\"autocomplete-concierge__loader\" aria-hidden=\"true\">\n                <svg className=\"svg-icon\" role=\"img\" focusable={false}>\n                    <use href=\"#spinner\" />\n                </svg>\n            </div>\n        );\n    }\n    return (\n        <button\n            type=\"submit\"\n            className=\"autocomplete-concierge__submit\"\n            onClick={onSubmit}\n            aria-labelledby={`${componentId}-submit-label`}\n        >\n            <svg className=\"svg-icon\" role=\"img\" focusable={false}>\n                <title id={`${componentId}-submit-label`}>Submit search</title>\n                <use href=\"#search\" />\n            </svg>\n        </button>\n    );\n};\n\nfunction Autocomplete(props) {\n    const {\n        id,\n        templates,\n        placeholder,\n        debounce,\n        action,\n        method,\n        hiddenFields,\n        inputAttributes,\n        showSubmit,\n        onClose,\n        showClear,\n        showLoader,\n    } = props;\n\n    const { setSelectedIndex, selectedIndex, count, fetchResults, fetching } =\n        useStore();\n\n    const [activeDescendant, setActiveDescendant] = useState(null);\n    const [submit, setSubmit] = useState(null);\n    const [showResults, setShowResults] = useState(null);\n    const [query, setQuery] = useState(``);\n    const [readerAnnounce, setReaderAnnounce] = useState(``);\n    const [isInputFocused, setIsInputFocused] = useState(false);\n    const [gridClasses, setGridClasses] = useState(\n        `autocomplete-concierge__results`\n    );\n\n    const formRef = useRef();\n    const sliderRef = useRef();\n    const searchBox = useRef(null);\n    const tracker = getTracker();\n\n    const [elements, childRefs] = useArrayRef();\n\n    const { keyboardProps } = useKeyboard({\n        onKeyUp: (e) => {\n            let index = -1;\n            // ESC\n            if (e.keyCode === 27) {\n                // Hide results\n                setIsInputFocused(false);\n                // Reset selected item\n                setSelectedIndex(-1);\n\n                // If second time enter hit we want to call onClose cllaback function, in this example\n                // we will close popover we have autocomplete nested.\n                if (!showResults) {\n                    onClose();\n                }\n                // After closing results regain input field focus\n                if (searchBox.current) {\n                    searchBox.current.focus();\n                }\n                return;\n            }\n            // Down\n            if (e.keyCode === 40) {\n                index = selectedIndex + 1 >= count ? 0 : selectedIndex + 1;\n                // When more items than view can accommodate, we want scroll to follow the button down.\n                if (elements[index]) {\n                    elements[index].scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'nearest',\n                        inline: 'start',\n                    });\n                }\n            }\n            // Up\n            if (e.keyCode === 38) {\n                index = selectedIndex - 1 < 0 ? count - 1 : selectedIndex - 1;\n                // When more items than view can accommodate, we want scroll to follow the button up.\n                if (elements[index]) {\n                    elements[index].scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'nearest',\n                        inline: 'start',\n                    });\n                }\n            }\n            // Enter\n            if (e.keyCode === 13) {\n                // Nothing selected and enter hit we will post form.\n                if (selectedIndex === -1) {\n                    setSubmit(true);\n                    return;\n                }\n\n                // We will fire onClick event when enter hit\n                elements[selectedIndex].click();\n            }\n\n            setSelectedIndex(index);\n            setActiveDescendant(index);\n            setIsInputFocused(true);\n        },\n        onKeyDown: (e) => {\n            // This wil prevent moving cursor on input field when press down or up also stop form from being posted when enter pressed.\n            if (\n                e.keyCode === 40 ||\n                e.keyCode === 38 ||\n                e.keyCode === 13 ||\n                e.keyCode === 27\n            ) {\n                e.preventDefault();\n            } else {\n                // Regain focus on input field when other buttons are entered.\n                searchBox.current.focus();\n            }\n            return false;\n        },\n    });\n\n    // This is to handle clicks outside the combobox.\n    const { focusWithinProps } = useFocusWithin({\n        onFocusWithin: () => {\n            setIsInputFocused(true);\n        },\n        onBlurWithin: () => {\n            setIsInputFocused(false);\n        },\n    });\n\n    // When count or focus change we will hide or show result.\n    useEffect(() => {\n        setShowResults(() => isInputFocused && count > 0);\n    }, [count, isInputFocused]);\n\n    // Animation handler.\n    useEffect(() => {\n        const classes = ['autocomplete-concierge__results'];\n\n        if (fetching && showResults) {\n            classes.push('autocomplete-concierge__results--expanding');\n            setGridClasses(classes.join(' '));\n        }\n\n        if (!fetching && showResults) {\n            classes.push('autocomplete-concierge__results--open');\n            setGridClasses(classes.join(' '));\n        }\n\n        if (!fetching && !showResults) {\n            classes.push('autocomplete-concierge__results--collapsing');\n            setGridClasses(classes.join(' '));\n        }\n    }, [showResults]);\n\n    // On page load update input field with query string.\n    useEffect(() => {\n        const queryParam = getParam(document.location.href, 'query');\n        setQuery(queryParam || ``);\n    }, []);\n\n    // Let the screen readers know we have or not results.\n    useEffect(() => {\n        if (!query) {\n            return;\n        }\n        const message =\n            count > 0\n                ? `${count} results for ${query}`\n                : `No results found for ${query}`;\n\n        setReaderAnnounce(message);\n    }, [count, query]);\n\n    // When query changed we debounce network request.\n    useEffect(() => {\n        const delayDebounceFn = setTimeout(async () => {\n            // When reset query, we will reestablish focus on input field.\n            if (query === ``) {\n                searchBox.current.focus();\n            }\n            await fetchResults(query, templates);\n        }, debounce);\n\n        return () => clearTimeout(delayDebounceFn);\n    }, [query]);\n\n    // This is to handle form submissions including tracker.\n    useEffect(() => {\n        if (submit && formRef.current && searchBox.current) {\n            searchBox.current.value = query;\n            if (tracker) {\n                const trackingEvent = {\n                    TYPE: 'SUBMIT',\n                    title: 'NEEDS_REFRESH',\n                    url: window.location.href,\n                    time: Date.now(),\n                };\n                tracker.trackedEventWithCb(\n                    trackingEvent,\n                    formRef.current.submit()\n                );\n                return;\n            }\n\n            formRef.current.submit();\n        }\n    }, [submit]);\n\n    const handleInputOnChange = ({ currentTarget: { value } }) => {\n        setQuery(value);\n    };\n\n    const trackedClick = (url, title, cb) => {\n        if (tracker) {\n            const trackingEvent = {\n                TYPE: 'CLICK',\n                url,\n                query,\n                title,\n            };\n            tracker.trackedEventWithCb(trackingEvent, cb);\n        }\n        if (cb && !tracker) {\n            cb();\n        }\n    };\n\n    // Standard onClick handler, can be overridden within template component if needed.\n    const handleClick = useCallback((e, data) => {\n        // Hijack's enter button and touch and click events.\n        e.preventDefault();\n\n        // eslint-disable-next-line no-shadow\n        const { action, action_t, title } = data;\n\n        if (action_t === 'Q' || action_t === undefined) {\n            setQuery(action || data);\n            setSubmit(true);\n            return;\n        }\n\n        trackedClick(\n            action,\n            title,\n            // eslint-disable-next-line no-return-assign\n            () => (document.location.href = action)\n        );\n    }, []);\n\n    return (\n        <div\n            className=\"autocomplete-concierge no-wysiwyg\"\n            role=\"search\"\n            {...focusWithinProps}\n        >\n            <form\n                ref={formRef}\n                action={action}\n                method={method}\n                className=\"autocomplete-concierge__form\"\n            >\n                <label\n                    className=\"sr-only\"\n                    aria-live=\"polite\"\n                    id={`${id}-label`}\n                >\n                    {readerAnnounce}\n                </label>\n                {showLoader && (\n                    <Loader\n                        fetching={fetching}\n                        onSubmit={() => setSubmit(true)}\n                        componentId={id}\n                    />\n                )}\n                <input\n                    id={`${id}-inputField`}\n                    ref={searchBox}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    role=\"combobox\"\n                    aria-expanded={showResults}\n                    aria-haspopup=\"grid\"\n                    aria-labelledby={`${id}-label`}\n                    aria-autocomplete=\"list\"\n                    aria-controls={`${id}-grid`}\n                    aria-activedescendant={\n                        activeDescendant === -1 ? undefined : activeDescendant\n                    }\n                    onChange={handleInputOnChange}\n                    value={query}\n                    placeholder={placeholder}\n                    className=\"autocomplete-concierge__input\"\n                    name=\"query\"\n                    {...keyboardProps}\n                    {...inputAttributes}\n                />\n                {hiddenFields &&\n                    hiddenFields.map((el) => (\n                        <input\n                            key={el.id}\n                            type=\"hidden\"\n                            name={el.name}\n                            value={el.value}\n                        />\n                    ))}\n                <button\n                    type=\"button\"\n                    className={[\n                        `autocomplete-concierge__submit`,\n                        !showClear || (showClear && query.length === 0)\n                            ? `hidden`\n                            : ``,\n                    ].join(' ')}\n                    onClick={() => setQuery(``)}\n                    onKeyUp={(e) => {\n                        e.preventDefault();\n                        if (e.keyCode === 13) {\n                            setQuery(``);\n                        }\n                    }}\n                >\n                    <svg className=\"svg-icon\" role=\"img\" focusable={false}>\n                        <title>Clear search</title>\n                        <use href=\"#close\" />\n                    </svg>\n                    Clear\n                </button>\n                {showSubmit && !showLoader && (\n                    <button\n                        type=\"submit\"\n                        className=\"autocomplete-concierge__submit\"\n                        onClick={() => setSubmit(true)}\n                        aria-labelledby={`${id}-submit-label`}\n                    >\n                        <svg className=\"svg-icon\" role=\"img\" focusable={false}>\n                            <title id={`${id}-submit-label`}>\n                                Submit search\n                            </title>\n                            <use href=\"#search\" />\n                        </svg>\n                    </button>\n                )}\n            </form>\n            <div\n                ref={sliderRef}\n                role=\"grid\"\n                aria-labelledby={`${id}-label`}\n                aria-hidden={!showResults}\n                id={`${id}-grid`}\n                className={gridClasses}\n                tabIndex={-1}\n                {...keyboardProps}\n                style={{ display: !showResults ? 'none' : '' }}\n            >\n                {templates &&\n                    templates.map((el, templateId) =>\n                        LoadTemplates({\n                            ...el,\n                            templateId,\n                            handleClick,\n                            trackedClick,\n                            childRefs,\n                        })\n                    )}\n            </div>\n            <DismissButton onDismiss={() => setShowResults(false)} />\n        </div>\n    );\n}\n\nexport default function AutocompleteProvider(props) {\n    const { adapters } = props;\n    const autocompleteService = new AutocompleteService(adapters);\n\n    return (\n        <StoreProvider\n            initialState={initialState}\n            reducer={searchReducer}\n            autocompleteService={autocompleteService}\n        >\n            <Autocomplete {...props} />\n        </StoreProvider>\n    );\n}\n\nconst { string, arrayOf, shape, number, bool, func } = PropTypes;\n\nAutocomplete.propTypes = {\n    id: string,\n    templates: arrayOf(\n        shape({\n            id: string,\n            label: string,\n            template: string,\n            serviceUrl: string,\n            params: string,\n        })\n    ).isRequired,\n    placeholder: string,\n    debounce: number,\n    action: string,\n    method: string,\n    showSubmit: bool,\n    isOpen: bool,\n    onClose: func,\n    showClear: bool,\n    showLoader: bool,\n};\n\nAutocomplete.defaultProps = {\n    id: 'autocomplete-search',\n    placeholder: 'Start your search here...',\n    debounce: 500,\n    action: 'search.html',\n    method: 'GET',\n    showSubmit: true,\n    isOpen: false,\n    onClose: () => {},\n    showClear: false,\n    showLoader: false,\n};\n","/* eslint-disable no-console */\n\nexport const UPDATE_QUERY = 'PNP/AUTOCOMPLETE/UPDATE_QUERY';\nexport const UPDATE_RESULTS = 'PNP/AUTOCOMPLETE/UPDATE_RESULTS';\nexport const SET_SELECTED = 'PNP/AUTOCOMPLETE/SET_SELECTED';\nexport const LOAD_REQUEST = 'PNP/AUTOCOMPLETE/LOAD_REQUEST';\nexport const LOAD_FAILED = 'PNP/AUTOCOMPLETE/LOAD_FAILED';\nexport const LOAD_SUCCESS = 'PNP/AUTOCOMPLETE/LOAD_SUCCESS';\n\nexport const initialState = {\n    results: [],\n    count: 0,\n    query: ``,\n    selectedIndex: -1,\n    fetching: false,\n    error: ``,\n};\n\nexport const searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_REQUEST:\n            return {\n                ...state,\n                fetching: true,\n            };\n        case LOAD_FAILED:\n            return {\n                ...state,\n                error: action.error,\n                fetching: false,\n            };\n        case LOAD_SUCCESS:\n            return {\n                ...state,\n                fetching: false,\n            };\n        case UPDATE_RESULTS:\n            return {\n                ...state,\n                results: action.results,\n                count: action.count,\n                query: action.query,\n                selectedIndex: -1,\n            };\n        case SET_SELECTED:\n            return {\n                ...state,\n                selectedIndex: action.selectedIndex,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport const autocompleteContext = (dispatch, service) => ({\n    updateResults: (results, count) => {\n        dispatch({\n            type: UPDATE_RESULTS,\n            results,\n            count,\n        });\n    },\n    setSelectedIndex: (selectedIndex) => {\n        dispatch({\n            type: SET_SELECTED,\n            selectedIndex,\n        });\n    },\n    fetchResults: async (query) => {\n        if (!query) {\n            dispatch({\n                type: UPDATE_RESULTS,\n                results: [],\n                count: 0,\n            });\n            return;\n        }\n        dispatch({\n            type: LOAD_REQUEST,\n        });\n\n        const { results, count, error } = await service.getResults(query);\n\n        if (error) {\n            console.error(\n                `There was an error fetching results from the service.`\n            );\n            console.info(error.message);\n\n            dispatch({\n                type: UPDATE_RESULTS,\n                results: [],\n                count: 0,\n            });\n\n            dispatch({\n                type: LOAD_FAILED,\n                error: error.message,\n            });\n            return;\n        }\n\n        dispatch({\n            type: UPDATE_RESULTS,\n            results,\n            count,\n            query,\n        });\n\n        dispatch({\n            type: LOAD_SUCCESS,\n        });\n    },\n});\n","import React, { useReducer, useContext, createContext, useMemo } from 'react';\nimport { autocompleteContext } from './reducer';\n\nconst Store = createContext();\n\nStore.displayName = 'PNP-STORE';\n\nexport const useStore = () => useContext(Store);\n\nexport const StoreProvider = ({\n    children,\n    initialState,\n    reducer,\n    autocompleteService,\n}) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const autocomplete = useMemo(\n        () => autocompleteContext(dispatch, autocompleteService),\n        []\n    );\n\n    return (\n        <Store.Provider value={{ ...autocomplete, dispatch, ...state }}>\n            {children}\n        </Store.Provider>\n    );\n};\n","var map = {\n\t\"./cemetery--v15\": [\n\t\t98938,\n\t\t938\n\t],\n\t\"./cemetery--v15.jsx\": [\n\t\t98938,\n\t\t938\n\t],\n\t\"./cemetery--v16\": [\n\t\t97841,\n\t\t841\n\t],\n\t\"./cemetery--v16.jsx\": [\n\t\t97841,\n\t\t841\n\t],\n\t\"./faqs--v15\": [\n\t\t81524,\n\t\t524\n\t],\n\t\"./faqs--v15.jsx\": [\n\t\t81524,\n\t\t524\n\t],\n\t\"./faqs--v16\": [\n\t\t20080,\n\t\t80\n\t],\n\t\"./faqs--v16.jsx\": [\n\t\t20080,\n\t\t80\n\t],\n\t\"./organic\": [\n\t\t44113,\n\t\t113\n\t],\n\t\"./organic.jsx\": [\n\t\t44113,\n\t\t113\n\t],\n\t\"./people--v15\": [\n\t\t62140,\n\t\t140\n\t],\n\t\"./people--v15.jsx\": [\n\t\t62140,\n\t\t140\n\t],\n\t\"./people--v16\": [\n\t\t12507,\n\t\t507\n\t],\n\t\"./people--v16.jsx\": [\n\t\t12507,\n\t\t507\n\t],\n\t\"./planning_applications--v15\": [\n\t\t53298,\n\t\t298\n\t],\n\t\"./planning_applications--v15.jsx\": [\n\t\t53298,\n\t\t298\n\t],\n\t\"./planning_applications--v16\": [\n\t\t38504,\n\t\t504\n\t],\n\t\"./planning_applications--v16.jsx\": [\n\t\t38504,\n\t\t504\n\t],\n\t\"./programs--v15\": [\n\t\t86588,\n\t\t588\n\t],\n\t\"./programs--v15.jsx\": [\n\t\t86588,\n\t\t588\n\t],\n\t\"./programs--v16\": [\n\t\t32723,\n\t\t723\n\t],\n\t\"./programs--v16.jsx\": [\n\t\t32723,\n\t\t723\n\t],\n\t\"./roadworks--v15\": [\n\t\t75554,\n\t\t554\n\t],\n\t\"./roadworks--v15.jsx\": [\n\t\t75554,\n\t\t554\n\t],\n\t\"./roadworks--v16\": [\n\t\t54563,\n\t\t563\n\t],\n\t\"./roadworks--v16.jsx\": [\n\t\t54563,\n\t\t563\n\t],\n\t\"./services--v15\": [\n\t\t91362,\n\t\t362\n\t],\n\t\"./services--v15.jsx\": [\n\t\t91362,\n\t\t362\n\t],\n\t\"./services--v16 \": [\n\t\t45542,\n\t\t542\n\t],\n\t\"./services--v16 .jsx\": [\n\t\t45542,\n\t\t542\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42276;\nmodule.exports = webpackAsyncContext;"],"names":["AutocompleteService","constructor","adapters","length","Error","this","autocompleteAdapters","Array","from","forEach","adapter","hasOwnProperty","name","registerAdapter","push","getResults","args","mockFn","Promise","all","map","then","result","mappedResults","resultsCount","i","idx","data","element","results","count","catch","error","console","Loader","fetching","onSubmit","componentId","className","role","focusable","href","type","onClick","id","Autocomplete","props","templates","placeholder","debounce","action","method","hiddenFields","inputAttributes","showSubmit","onClose","showClear","showLoader","setSelectedIndex","selectedIndex","fetchResults","useStore","activeDescendant","setActiveDescendant","useState","submit","setSubmit","showResults","setShowResults","query","setQuery","readerAnnounce","setReaderAnnounce","isInputFocused","setIsInputFocused","gridClasses","setGridClasses","formRef","useRef","sliderRef","searchBox","tracker","getTracker","elements","childRefs","useArrayRef","keyboardProps","useKeyboard","onKeyUp","e","index","keyCode","current","focus","scrollIntoView","behavior","block","inline","click","onKeyDown","preventDefault","focusWithinProps","useFocusWithin","onFocusWithin","onBlurWithin","useEffect","classes","join","queryParam","getParam","document","location","message","delayDebounceFn","setTimeout","async","clearTimeout","value","trackingEvent","TYPE","title","url","window","time","Date","now","trackedEventWithCb","trackedClick","cb","handleClick","useCallback","action_t","undefined","ref","autoComplete","onChange","currentTarget","el","key","tabIndex","style","display","templateId","template","componentName","toLowerCase","DynamicComponent","useMemo","lazy","Suspense","fallback","LoadTemplates","onDismiss","AutocompleteProvider","autocompleteService","initialState","reducer","searchReducer","string","arrayOf","shape","number","bool","func","PropTypes","propTypes","label","serviceUrl","params","isRequired","isOpen","defaultProps","UPDATE_RESULTS","SET_SELECTED","LOAD_REQUEST","LOAD_FAILED","LOAD_SUCCESS","state","autocompleteContext","dispatch","service","updateResults","info","Store","createContext","displayName","useContext","StoreProvider","children","useReducer","autocomplete","Provider","webpackAsyncContext","req","__webpack_require__","o","resolve","code","ids","keys","Object","module","exports"],"sourceRoot":""}