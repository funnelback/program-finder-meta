{"version":3,"file":"js/AutocompleteConcierge-839f7c33660e8b705bdb.js","mappings":"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","sources":["webpack://template-stencils/./src/modules/autocomplete-concierge/data/AutocompleteService.js","webpack://template-stencils/./src/modules/autocomplete-concierge/jsx/AutocompleteConcierge.jsx","webpack://template-stencils/./src/modules/modal/jsx/Modal.jsx","webpack://template-stencils/./src/modules/autocomplete-concierge/jsx/AutocompleteConciergeModal.jsx","webpack://template-stencils/./src/modules/autocomplete-concierge/jsx/StoreProvider.jsx","webpack://template-stencils/./src/modules/autocomplete-concierge/jsx/searchReducer.js","webpack://template-stencils/./src/modules/autocomplete-concierge/jsx/templates/ lazy ^\\.\\/.*$ namespace object"],"sourcesContent":["/*!\n * @license\n * Copyright Squiz Australia Pty Ltd. All Rights Reserved.\n */\n\n/* eslint-disable import/prefer-default-export */\n\nexport class AutocompleteService {\n    constructor(adapters) {\n        if (!adapters || adapters.length === 0) {\n            throw new Error(`At least one adapter is required for AutocompleteService`);\n        }\n\n        this.autocompleteAdapters = [];\n\n        Array.from(adapters).forEach((adapter) => {\n            // eslint-disable-next-line no-prototype-builtins\n            if (!adapter || !adapter.hasOwnProperty('autocomplete')) {\n                throw new Error(`${adapter.constructor.name} is not implemented yet`);\n            } else {\n                this.registerAdapter(adapter);\n            }\n        });\n    }\n\n    registerAdapter(adapter) {\n        this.autocompleteAdapters.push(adapter);\n    }\n\n    /**\n     * Get search results.\n     *\n     * @param {string} args query string.\n     * @param {function} mockFn Unit test mock function.\n     *\n     * @returns {Promise<array>} A promised list of search results.\n     */\n    getResults(args, mockFn) {\n        return Promise.all(this.autocompleteAdapters.map((adapter) => adapter.getResults(args, mockFn).then((response) => response.json())))\n            .then((result) => {\n                const mappedResults = [];\n                let resultsCount = 0;\n                let i = 0;\n\n                // Match each result with its template id.\n                result.map((data, idx) => {\n                    resultsCount += data.length;\n                    mappedResults[idx] = [];\n                    if (data.length) {\n                        data.forEach((element) => {\n                            // eslint-disable-next-line no-plusplus\n                            mappedResults[idx][i++] = element;\n                        });\n                    }\n                    return mappedResults;\n                });\n\n                return { results: mappedResults, count: resultsCount };\n            })\n            .catch((error) => {\n                /* eslint-disable no-console */\n                console.error(error);\n                return { results: [], count: 0, error };\n            });\n    }\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable camelcase */\nimport React, { useState, useEffect, useMemo, Suspense, lazy, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useKeyboard, useFocusWithin } from '@react-aria/interactions';\nimport { DismissButton } from '@react-aria/overlays';\n\nimport { AutocompleteService } from '../data/AutocompleteService';\nimport StoreProvider, { useStore } from './StoreProvider';\nimport searchReducer, { initialState } from './searchReducer';\nimport { useArrayRef, getParam, getTracker } from './utility/helpers';\n\n/**\n * Lazy load result templates. We could not use standard hook to load, as we need to pass array of refs.\n * With memo we caching function but still have ability to rebuild props when refs are changed.\n *\n * @param {object} props Object with props we want to pass into component.\n *\n * @returns {JSX.Element}\n * @constructor\n */\nfunction LoadTemplates(props) {\n    const { template } = props;\n    const DynamicComponent = useMemo(() => lazy(() => import(`./templates/${template}`)), []);\n\n    return (\n        <Suspense key={`component-${template}`} fallback={<span className=\"sr-only\">Loading template...</span>}>\n            <DynamicComponent {...props} />\n        </Suspense>\n    );\n}\n\n/**\n * Loading indicator.\n *\n * @param {bool} fetching Flag indicating loading state.\n * @param {function} onSubmit Callback function to execute when submit event occur.\n * @param {string} componentId Id of the component.\n *\n * @return {JSX.Element}\n * @constructor\n */\nfunction Loader({ fetching, onSubmit, componentId }) {\n    if (fetching) {\n        return (\n            <div className=\"autocomplete-concierge__loader\" aria-hidden=\"true\">\n                <svg className=\"autocomplete-concierge__icon\" role=\"img\" focusable={false}>\n                    <use href=\"#spinner\" />\n                </svg>\n            </div>\n        );\n    }\n    return (\n        <button type=\"submit\" className=\"autocomplete-concierge__submit\" onClick={onSubmit} aria-labelledby={`${componentId}-submit-label`}>\n            <svg className=\"autocomplete-concierge__icon\" role=\"img\" focusable={false}>\n                <title id={`${componentId}-submit-label`}>Submit search</title>\n                <use href=\"#search\" />\n            </svg>\n        </button>\n    );\n}\n\nfunction Autocomplete(props) {\n    const {\n        id,\n        templates,\n        placeholder,\n        debounce,\n        action,\n        method,\n        hiddenFields,\n        inputAttributes,\n        showSubmit,\n        onClose,\n        showClear,\n        showLoader,\n    } = props;\n\n    const { setSelectedIndex, selectedIndex, count, fetchResults, fetching } = useStore();\n\n    const [activeDescendant, setActiveDescendant] = useState(null);\n    const [submit, setSubmit] = useState(null);\n    const [showResults, setShowResults] = useState(null);\n    const [query, setQuery] = useState(``);\n    const [readerAnnounce, setReaderAnnounce] = useState(``);\n    const [isInputFocused, setIsInputFocused] = useState(false);\n    const [gridClasses, setGridClasses] = useState(`autocomplete-concierge__results`);\n\n    const formRef = useRef();\n    const sliderRef = useRef();\n    const searchBox = useRef(null);\n    const tracker = getTracker();\n\n    const [elements, childRefs] = useArrayRef();\n\n    const { keyboardProps } = useKeyboard({\n        onKeyUp: (e) => {\n            let index = -1;\n            // ESC\n            if (e.keyCode === 27) {\n                // Hide results\n                setIsInputFocused(false);\n                // Reset selected item\n                setSelectedIndex(-1);\n\n                // If second time enter hit we want to call onClose cllaback function, in this example\n                // we will close popover we have autocomplete nested.\n                if (!showResults) {\n                    onClose();\n                }\n                // After closing results regain input field focus\n                if (searchBox.current) {\n                    searchBox.current.focus();\n                }\n                return;\n            }\n            // Down\n            if (e.keyCode === 40) {\n                index = selectedIndex + 1 >= count ? 0 : selectedIndex + 1;\n                // When more items than view can accommodate, we want scroll to follow the button down.\n                if (elements[index]) {\n                    elements[index].scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'nearest',\n                        inline: 'start',\n                    });\n                }\n            }\n            // Up\n            if (e.keyCode === 38) {\n                index = selectedIndex - 1 < 0 ? count - 1 : selectedIndex - 1;\n                // When more items than view can accommodate, we want scroll to follow the button up.\n                if (elements[index]) {\n                    elements[index].scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'nearest',\n                        inline: 'start',\n                    });\n                }\n            }\n            // Enter\n            if (e.keyCode === 13) {\n                // Nothing selected and enter hit we will post form.\n                if (selectedIndex === -1) {\n                    setSubmit(true);\n                    return;\n                }\n\n                // We will fire onClick event when enter hit\n                elements[selectedIndex].click();\n            }\n\n            setSelectedIndex(index);\n            setActiveDescendant(index);\n            setIsInputFocused(true);\n        },\n        onKeyDown: (e) => {\n            // This wil prevent moving cursor on input field when press down or up also stop form from being posted when enter pressed.\n            if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 13 || e.keyCode === 27) {\n                e.preventDefault();\n            } else {\n                // Regain focus on input field when other buttons are entered.\n                searchBox.current.focus();\n            }\n            return false;\n        },\n    });\n\n    // This is to handle clicks outside the combobox.\n    const { focusWithinProps } = useFocusWithin({\n        onFocusWithin: () => {\n            setIsInputFocused(true);\n        },\n        onBlurWithin: () => {\n            setIsInputFocused(false);\n        },\n    });\n\n    // When count or focus change we will hide or show result.\n    useEffect(() => {\n        setShowResults(() => isInputFocused && count > 0);\n    }, [count, isInputFocused]);\n\n    // Animation handler.\n    useEffect(() => {\n        const classes = ['autocomplete-concierge__results'];\n\n        if (fetching && showResults) {\n            classes.push('autocomplete-concierge__results--expanding');\n            setGridClasses(classes.join(' '));\n        }\n\n        if (!fetching && showResults) {\n            classes.push('autocomplete-concierge__results--open');\n            setGridClasses(classes.join(' '));\n        }\n\n        if (!fetching && !showResults) {\n            classes.push('autocomplete-concierge__results--collapsing');\n            setGridClasses(classes.join(' '));\n        }\n    }, [showResults]);\n\n    // On page load update input field with query string.\n    useEffect(() => {\n        const queryParam = getParam(document.location.href, 'query');\n        setQuery(queryParam || ``);\n    }, []);\n\n    // Let the screen readers know we have or not results.\n    useEffect(() => {\n        if (!query) {\n            return;\n        }\n        const message = count > 0 ? `${count} results for ${query}` : `No results found for ${query}`;\n\n        setReaderAnnounce(message);\n    }, [count, query]);\n\n    // When query changed we debounce network request.\n    useEffect(() => {\n        const delayDebounceFn = setTimeout(async () => {\n            // When reset query, we will reestablish focus on input field.\n            if (query === ``) {\n                searchBox.current.focus();\n            }\n            await fetchResults(query, templates);\n        }, debounce);\n\n        return () => clearTimeout(delayDebounceFn);\n    }, [query]);\n\n    // This is to handle form submissions including tracker.\n    useEffect(() => {\n        if (submit && formRef.current && searchBox.current) {\n            searchBox.current.value = query;\n            if (tracker) {\n                const trackingEvent = {\n                    TYPE: 'SUBMIT',\n                    title: 'NEEDS_REFRESH',\n                    url: window.location.href,\n                    time: Date.now(),\n                };\n                tracker.trackedEventWithCb(trackingEvent, formRef.current.submit());\n                return;\n            }\n\n            formRef.current.submit();\n        }\n    }, [submit]);\n\n    const handleInputOnChange = ({ currentTarget: { value } }) => {\n        setQuery(value);\n    };\n\n    const trackedClick = (url, title, cb) => {\n        if (tracker) {\n            const trackingEvent = {\n                TYPE: 'CLICK',\n                url,\n                query,\n                title,\n            };\n            tracker.trackedEventWithCb(trackingEvent, cb);\n        }\n        if (cb && !tracker) {\n            cb();\n        }\n    };\n\n    // Standard onClick handler, can be overridden within template component if needed.\n    const handleClick = useCallback((e, data) => {\n        // Hijack's enter button and touch and click events.\n        e.preventDefault();\n\n        // eslint-disable-next-line no-shadow\n        const { action, action_t, title } = data;\n\n        if (action_t === 'Q' || action_t === undefined) {\n            setQuery(action || data);\n            setSubmit(true);\n            return;\n        }\n\n        trackedClick(\n            action,\n            title,\n            // eslint-disable-next-line no-return-assign\n            () => (document.location.href = action)\n        );\n    }, []);\n\n    return (\n        <div className=\"autocomplete-concierge no-wysiwyg\" role=\"search\" {...focusWithinProps}>\n            <form ref={formRef} action={action} method={method} className=\"autocomplete-concierge__form\">\n                <label className=\"sr-only\" aria-live=\"polite\" id={`${id}-label`}>\n                    {readerAnnounce}\n                </label>\n                {showLoader && <Loader fetching={fetching} onSubmit={() => setSubmit(true)} componentId={id} />}\n                <input\n                    id={`${id}-inputField`}\n                    ref={searchBox}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    role=\"combobox\"\n                    aria-expanded={showResults}\n                    aria-haspopup=\"grid\"\n                    aria-labelledby={`${id}-label`}\n                    aria-autocomplete=\"list\"\n                    aria-controls={`${id}-grid`}\n                    aria-activedescendant={activeDescendant === -1 ? undefined : activeDescendant}\n                    onChange={handleInputOnChange}\n                    value={query}\n                    placeholder={placeholder}\n                    className=\"autocomplete-concierge__input\"\n                    name=\"query\"\n                    {...keyboardProps}\n                    {...inputAttributes}\n                />\n                {hiddenFields && hiddenFields.map((el) => <input key={el.id} type=\"hidden\" name={el.name} value={el.value} />)}\n                <button\n                    type=\"button\"\n                    className={[`autocomplete-concierge__submit`, !showClear || (showClear && query.length === 0) ? `hidden` : ``].join(\n                        ' '\n                    )}\n                    onClick={() => setQuery(``)}\n                    onKeyUp={(e) => {\n                        e.preventDefault();\n                        if (e.keyCode === 13) {\n                            setQuery(``);\n                        }\n                    }}\n                >\n                    <svg className=\"autocomplete-concierge__icon\" role=\"img\" focusable={false}>\n                        <title>Clear search</title>\n                        <use href=\"#close\" />\n                    </svg>\n                    Clear\n                </button>\n                {showSubmit && !showLoader && (\n                    <button\n                        type=\"submit\"\n                        className=\"autocomplete-concierge__submit\"\n                        onClick={() => setSubmit(true)}\n                        aria-labelledby={`${id}-submit-label`}\n                    >\n                        <svg className=\"autocomplete-concierge__icon\" role=\"img\" focusable={false}>\n                            <title id={`${id}-submit-label`}>Submit search</title>\n                            <use href=\"#search\" />\n                        </svg>\n                    </button>\n                )}\n            </form>\n            <div\n                ref={sliderRef}\n                role=\"grid\"\n                aria-labelledby={`${id}-label`}\n                aria-hidden={!showResults}\n                id={`${id}-grid`}\n                className={gridClasses}\n                tabIndex={-1}\n                {...keyboardProps}\n                style={{ display: !showResults ? 'none' : '' }}\n            >\n                {templates &&\n                    templates.map((el, templateId) =>\n                        LoadTemplates({\n                            ...el,\n                            templateId,\n                            handleClick,\n                            trackedClick,\n                            childRefs,\n                        })\n                    )}\n            </div>\n            <DismissButton onDismiss={() => setShowResults(false)} />\n        </div>\n    );\n}\n\nexport default function AutocompleteConcierge(props) {\n    const { adapters } = props;\n    const autocompleteService = new AutocompleteService(adapters);\n\n    return (\n        <StoreProvider initialState={initialState} reducer={searchReducer} autocompleteService={autocompleteService}>\n            <Autocomplete {...props} />\n        </StoreProvider>\n    );\n}\n\nconst { string, arrayOf, shape, number, bool, func } = PropTypes;\n\nAutocompleteConcierge.propTypes = {\n    id: string,\n    templates: arrayOf(\n        shape({\n            id: string,\n            label: string,\n            template: string,\n            serviceUrl: string,\n            params: string,\n        })\n    ).isRequired,\n    placeholder: string,\n    debounce: number,\n    action: string,\n    method: string,\n    showSubmit: bool,\n    isOpen: bool,\n    onClose: func,\n    showClear: bool,\n    showLoader: bool,\n};\n\nAutocompleteConcierge.defaultProps = {\n    id: 'autocomplete-search',\n    placeholder: 'Start your search here...',\n    debounce: 500,\n    action: 'search.html',\n    method: 'GET',\n    showSubmit: true,\n    isOpen: false,\n    onClose: () => {},\n    showClear: false,\n    showLoader: false,\n};\n","/* eslint-disable react/jsx-props-no-spreading */ // Disabled as prop spreading is the documented way to use the @react-aria framework\nimport React, { useEffect } from 'react';\nimport { useOverlay, usePreventScroll, useModal, OverlayContainer } from '@react-aria/overlays';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope, useFocusManager } from '@react-aria/focus';\n\n/**\n * React implementation of the Plug and Play Modal, uses the Adobe @react-aria package\n * to handle the modal / dialog related accessability concerns such as focus movement, focus traps,\n * ESC to close ect.\n *\n * Needs to be wrapped within a <OverlayProvider> to aria hide the application when the modal opens.\n *\n * Comments on @react-aria hooks come directly from their documentation.\n */\nexport default function Modal({ titleId, title, onClose, children, className }) {\n    return (\n        <OverlayContainer>\n            <div className={`no-wysiwyg modal-wrapper ${className ? `${className}-wrapper` : ''}`}>\n                <FocusScope contain restoreFocus autoFocus>\n                    <ModalContent titleId={titleId} title={title} onClose={onClose} className={className}>\n                        {children}\n                    </ModalContent>\n                </FocusScope>\n            </div>\n        </OverlayContainer>\n    );\n}\n\nfunction ModalContent({ titleId, title, onClose, children, className }) {\n    // Base settings for @react-aria hooks\n    const settings = {\n        'aria-describedby': titleId,\n        title,\n        onClose,\n        isDismissable: true,\n        isOpen: true,\n    };\n\n    const modalRef = React.useRef();\n    const modalContentRef = React.useRef();\n    const focusManager = useFocusManager();\n\n    /*\n        Provides the behavior for overlays such as dialogs, popovers, and menus. Hides the overlay when\n        the user interacts outside it, when the Escape key is pressed, or optionally, on blur.\n    */\n    const { overlayProps, underlayProps } = useOverlay(settings, modalContentRef);\n\n    /*\n        Prevents scrolling on the document body on mount, and restores it on unmount.\n        Also ensures that content does not shift due to the scrollbars disappearing.\n    */\n    usePreventScroll();\n\n    /*\n        Hides content outside the current <OverlayContainer> from screen readers on mount and restores it on unmount.\n    */\n    const { modalProps } = useModal();\n\n    /*\n        Provides the behavior and accessibility implementation for a dialog component.\n    */\n    const { dialogProps, titleProps } = useDialog(settings, modalContentRef);\n\n    /*\n        Remove the hidden attribute as soon as its drawn to the DOM so it transitions open like\n        the base ES6 modal in the framework.\n    */\n    useEffect(() => {\n        modalRef.current.removeAttribute('hidden');\n        focusManager.focusFirst(); // FocusScope autofocus property wont work due to being hidden so focus first now\n    }, [modalRef]);\n\n    return (\n        <div ref={modalRef} {...underlayProps} hidden className={`modal ${className || ''}`}>\n            <div\n                ref={modalContentRef}\n                {...overlayProps}\n                {...dialogProps}\n                {...modalProps}\n                aria-modal=\"true\"\n                tabIndex=\"-1\"\n                className={`modal__content ${className ? `${className}__content` : ''}`}\n            >\n                {titleId ? (\n                    ''\n                ) : (\n                    <h2 {...titleProps} className={`${className ? `${className}__title` : ''}`}>\n                        {title}\n                    </h2>\n                )}\n                {children}\n            </div>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from 'react';\nimport uuidv4 from '../../global/js/uuid';\nimport { watchModals } from '@react-aria/aria-modal-polyfill';\nimport { OverlayProvider } from '@react-aria/overlays';\nimport Modal from '../../modal/jsx/Modal';\nimport AutocompleteConcierge from './AutocompleteConcierge';\n\n/**\n * Modal version of autocomplete search\n */\nexport default function AutocompleteConciergeModal(props) {\n    const [showAutocomplete, setShowAutocomplete] = useState(false);\n    const handleDialogClose = useCallback(() => {\n        setShowAutocomplete(false);\n    }, []);\n\n    watchModals();\n\n    const titleId = uuidv4(); // Popover needs a id for the dialog described by\n\n    const { adapters } = props;\n\n    return (\n        <OverlayProvider className=\"no-wysiwyg autocomplete-wrapper\">\n            <button type=\"button\" className=\"autocomplete-wrapper__action\" onClick={() => setShowAutocomplete(!showAutocomplete)}>\n                <svg className=\"autocomplete-wrapper__icon\">\n                    <title>Search</title>\n                    <use href=\"#search\" />\n                </svg>\n            </button>\n            {showAutocomplete && (\n                <Modal titleId={titleId} className=\"autocomplete-modal\" onClose={handleDialogClose}>\n                    <header className=\"autocomplete-modal__header\">\n                        <button type=\"button\" onClick={handleDialogClose} className=\"autocomplete-modal__header-close\">\n                            <svg className=\"autocomplete-modal__icon\">\n                                <title>Close modal</title>\n                                <use href=\"#close\" />\n                            </svg>\n                        </button>\n                    </header>\n                    <div className=\"autocomplete-modal__body\">\n                        <AutocompleteConcierge {...props} adapters={adapters} onClose={handleDialogClose} />\n                    </div>\n                </Modal>\n            )}\n        </OverlayProvider>\n    );\n}\n","import React, { useReducer, useContext, createContext, useMemo } from 'react';\nimport { autocompleteContext } from './searchReducer';\n\nconst Store = createContext();\n\nStore.displayName = 'PNP-STORE';\n\nexport const useStore = () => useContext(Store);\n\nfunction StoreProvider({ children, initialState, reducer, autocompleteService }) {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const autocomplete = useMemo(() => autocompleteContext(dispatch, autocompleteService), []);\n\n    const memoValue = useMemo(() => ({ ...autocomplete, dispatch, ...state }));\n\n    return <Store.Provider value={memoValue}>{children}</Store.Provider>;\n}\n\nexport default StoreProvider;\n","/* eslint-disable no-console */\n\nexport const UPDATE_QUERY = 'PNP/AUTOCOMPLETE/UPDATE_QUERY';\nexport const UPDATE_RESULTS = 'PNP/AUTOCOMPLETE/UPDATE_RESULTS';\nexport const SET_SELECTED = 'PNP/AUTOCOMPLETE/SET_SELECTED';\nexport const LOAD_REQUEST = 'PNP/AUTOCOMPLETE/LOAD_REQUEST';\nexport const LOAD_FAILED = 'PNP/AUTOCOMPLETE/LOAD_FAILED';\nexport const LOAD_SUCCESS = 'PNP/AUTOCOMPLETE/LOAD_SUCCESS';\n\nexport const initialState = {\n    results: [],\n    count: 0,\n    query: ``,\n    selectedIndex: -1,\n    fetching: false,\n    error: ``,\n};\n\nexport const autocompleteContext = (dispatch, service) => ({\n    updateResults: (results, count) => {\n        dispatch({\n            type: UPDATE_RESULTS,\n            results,\n            count,\n        });\n    },\n    setSelectedIndex: (selectedIndex) => {\n        dispatch({\n            type: SET_SELECTED,\n            selectedIndex,\n        });\n    },\n    fetchResults: async (query) => {\n        if (!query) {\n            dispatch({\n                type: UPDATE_RESULTS,\n                results: [],\n                count: 0,\n            });\n            return;\n        }\n        dispatch({\n            type: LOAD_REQUEST,\n        });\n\n        const { results, count, error } = await service.getResults(query);\n\n        if (error) {\n            console.error(`There was an error fetching results from the service.`);\n            console.info(error.message);\n\n            dispatch({\n                type: UPDATE_RESULTS,\n                results: [],\n                count: 0,\n            });\n\n            dispatch({\n                type: LOAD_FAILED,\n                error: error.message,\n            });\n            return;\n        }\n\n        dispatch({\n            type: UPDATE_RESULTS,\n            results,\n            count,\n            query,\n        });\n\n        dispatch({\n            type: LOAD_SUCCESS,\n        });\n    },\n});\n\n// eslint-disable-next-line default-param-last\nconst SearchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_REQUEST:\n            return {\n                ...state,\n                fetching: true,\n            };\n        case LOAD_FAILED:\n            return {\n                ...state,\n                error: action.error,\n                fetching: false,\n            };\n        case LOAD_SUCCESS:\n            return {\n                ...state,\n                fetching: false,\n            };\n        case UPDATE_RESULTS:\n            return {\n                ...state,\n                results: action.results,\n                count: action.count,\n                query: action.query,\n                selectedIndex: -1,\n            };\n        case SET_SELECTED:\n            return {\n                ...state,\n                selectedIndex: action.selectedIndex,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default SearchReducer;\n","var map = {\n\t\"./cemetery--v15\": [\n\t\t98938,\n\t\t938\n\t],\n\t\"./cemetery--v15.jsx\": [\n\t\t98938,\n\t\t938\n\t],\n\t\"./cemetery--v16\": [\n\t\t97841,\n\t\t841\n\t],\n\t\"./cemetery--v16.jsx\": [\n\t\t97841,\n\t\t841\n\t],\n\t\"./faqs--v15\": [\n\t\t81524,\n\t\t524\n\t],\n\t\"./faqs--v15.jsx\": [\n\t\t81524,\n\t\t524\n\t],\n\t\"./faqs--v16\": [\n\t\t20080,\n\t\t80\n\t],\n\t\"./faqs--v16.jsx\": [\n\t\t20080,\n\t\t80\n\t],\n\t\"./organic\": [\n\t\t44113,\n\t\t856,\n\t\t113\n\t],\n\t\"./organic.jsx\": [\n\t\t44113,\n\t\t856,\n\t\t113\n\t],\n\t\"./people--v15\": [\n\t\t62140,\n\t\t140\n\t],\n\t\"./people--v15.jsx\": [\n\t\t62140,\n\t\t140\n\t],\n\t\"./people--v16\": [\n\t\t12507,\n\t\t507\n\t],\n\t\"./people--v16.jsx\": [\n\t\t12507,\n\t\t507\n\t],\n\t\"./planning_applications--v15\": [\n\t\t53298,\n\t\t298\n\t],\n\t\"./planning_applications--v15.jsx\": [\n\t\t53298,\n\t\t298\n\t],\n\t\"./planning_applications--v16\": [\n\t\t38504,\n\t\t504\n\t],\n\t\"./planning_applications--v16.jsx\": [\n\t\t38504,\n\t\t504\n\t],\n\t\"./programs--v15\": [\n\t\t86588,\n\t\t588\n\t],\n\t\"./programs--v15.jsx\": [\n\t\t86588,\n\t\t588\n\t],\n\t\"./programs--v16\": [\n\t\t32723,\n\t\t723\n\t],\n\t\"./programs--v16.jsx\": [\n\t\t32723,\n\t\t723\n\t],\n\t\"./roadworks--v15\": [\n\t\t75554,\n\t\t554\n\t],\n\t\"./roadworks--v15.jsx\": [\n\t\t75554,\n\t\t554\n\t],\n\t\"./roadworks--v16\": [\n\t\t54563,\n\t\t563\n\t],\n\t\"./roadworks--v16.jsx\": [\n\t\t54563,\n\t\t563\n\t],\n\t\"./services--v15\": [\n\t\t91362,\n\t\t362\n\t],\n\t\"./services--v15.jsx\": [\n\t\t91362,\n\t\t362\n\t],\n\t\"./services--v16 \": [\n\t\t45542,\n\t\t542\n\t],\n\t\"./services--v16 .jsx\": [\n\t\t45542,\n\t\t542\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42276;\nmodule.exports = webpackAsyncContext;"],"names":["AutocompleteService","constructor","adapters","length","Error","this","autocompleteAdapters","Array","from","forEach","adapter","hasOwnProperty","name","registerAdapter","push","getResults","args","mockFn","Promise","all","map","then","response","json","result","mappedResults","resultsCount","i","data","idx","element","results","count","catch","error","console","Loader","fetching","onSubmit","componentId","className","role","focusable","href","type","onClick","id","Autocomplete","props","templates","placeholder","debounce","action","method","hiddenFields","inputAttributes","showSubmit","onClose","showClear","showLoader","setSelectedIndex","selectedIndex","fetchResults","useStore","activeDescendant","setActiveDescendant","useState","submit","setSubmit","showResults","setShowResults","query","setQuery","readerAnnounce","setReaderAnnounce","isInputFocused","setIsInputFocused","gridClasses","setGridClasses","formRef","useRef","sliderRef","searchBox","tracker","getTracker","elements","childRefs","useArrayRef","keyboardProps","useKeyboard","onKeyUp","e","index","keyCode","current","focus","scrollIntoView","behavior","block","inline","click","onKeyDown","preventDefault","focusWithinProps","useFocusWithin","onFocusWithin","onBlurWithin","useEffect","classes","join","queryParam","getParam","document","location","delayDebounceFn","setTimeout","async","clearTimeout","value","trackingEvent","TYPE","title","url","window","time","Date","now","trackedEventWithCb","trackedClick","cb","handleClick","useCallback","action_t","undefined","ref","autoComplete","onChange","currentTarget","el","key","tabIndex","style","display","templateId","template","DynamicComponent","useMemo","lazy","Suspense","fallback","LoadTemplates","onDismiss","AutocompleteConcierge","autocompleteService","StoreProvider","initialState","reducer","searchReducer","string","arrayOf","shape","number","bool","func","PropTypes","propTypes","label","serviceUrl","params","isRequired","isOpen","defaultProps","Modal","titleId","children","contain","restoreFocus","autoFocus","ModalContent","settings","isDismissable","modalRef","React","modalContentRef","focusManager","useFocusManager","overlayProps","underlayProps","useOverlay","usePreventScroll","modalProps","useModal","dialogProps","titleProps","useDialog","removeAttribute","focusFirst","hidden","AutocompleteConciergeModal","showAutocomplete","setShowAutocomplete","handleDialogClose","watchModals","uuidv4","Store","createContext","displayName","useContext","state","dispatch","useReducer","autocomplete","autocompleteContext","memoValue","Provider","UPDATE_RESULTS","SET_SELECTED","LOAD_REQUEST","LOAD_FAILED","LOAD_SUCCESS","service","updateResults","info","message","webpackAsyncContext","req","__webpack_require__","o","resolve","code","ids","slice","keys","Object","module","exports"],"sourceRoot":""}