{"version":3,"file":"js/554-c3efedfbc39b347cbd26.js","mappings":"iOA8De,SAASA,EAAUC,GAC9B,MAAM,QAAEC,EAAF,cAAWC,IAAkBC,EAAAA,EAAAA,MAC7B,GAAEC,EAAF,MAAMC,EAAN,UAAaC,EAAb,WAAwBC,EAAxB,UAAoCC,EAApC,YAA+CC,GAAgBT,EAErE,OAAKC,EAAQM,IAA8C,IAA/BN,EAAQM,GAAYG,OAK5C,uBACIN,GAAE,qBAAgBA,GAClBE,UAAW,CAAC,kCAAmCA,GAAWK,KAAK,KAC/DC,KAAK,YAEL,sBAAIN,UAAU,yCAAyCD,GACtDJ,EAAQM,IACLN,EAAQM,GAAYM,KAAI,CAACC,EAAMC,IA1E/C,SAAiBf,GACb,MAAM,KAAEc,EAAF,MAAQC,EAAR,YAAeN,EAAf,cAA4BP,EAA5B,UAA2CM,GAAcR,GACzD,OACFgB,EACAC,MAAM,MAAEC,EAAF,SAASC,IACfL,EAEJ,OACI,uBACIV,GAAE,UAAKW,GACPH,KAAK,MACLQ,IAAKZ,EACLa,IAAG,0BAAqBN,GACxB,gBAAeb,IAAkBa,EACjCT,UAAU,6CACVgB,QAAUC,GAAMd,EAAYc,EAAG,IAAKT,EAAMI,UAC1CM,UAAYD,GAAMd,EAAYc,EAAG,IAAKT,EAAMI,UAC5CO,UAAW,GAEX,uBAAKnB,UAAU,UAAUM,KAAK,YACzBO,EAASO,iBACN,qBACIR,MAAOC,EAASO,gBAChBpB,UAAU,QACVqB,KAAMX,GAELG,EAASO,gBACTP,EAASS,oBACN,uBAAKtB,UAAU,kCACX,uBAAKA,UAAU,WAAW,cAAY,QAClC,uBAAKqB,KAAK,WAEbR,EAASS,oBAGjBT,EAASU,iCACN,uBAAKvB,UAAU,kCACX,uBAAKA,UAAU,WAAW,cAAY,QAClC,uBAAKqB,KAAK,YAEbR,EAASU,iCAGjBV,EAASW,mBACN,uBAAKxB,UAAU,kCACX,uBAAKA,UAAU,WAAW,cAAY,QAClC,uBAAKqB,KAAK,UAEbR,EAASW,sBA2BtBC,CAAQ,CACJjB,OACAC,QACAN,cACAP,gBACAM,iBAjBT,KAwBf,MAAM,OAAEwB,EAAF,OAAUC,EAAV,KAAkBC,GAASC,IAEjCpC,EAAUqC,UAAY,CAClBhC,GAAI4B,EAAOK,WACXhC,MAAO2B,EACP1B,UAAW0B,EACXzB,WAAY0B,EAAOI,WACnB7B,UAAW0B,EAAKG,YAGpBtC,EAAUuC,aAAe,CACrBjC,MAAO,GACPC,UAAW","sources":["webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/roadworks--v15.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../store';\n\nfunction partial(props) {\n    const { data, index, handleClick, selectedIndex, childRefs } = props;\n    const {\n        action,\n        disp: { title, metaData },\n    } = data;\n\n    return (\n        <div\n            id={`${index}`}\n            role=\"row\"\n            ref={childRefs}\n            key={`result-programs-${index}`}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item\"\n            onClick={(e) => handleClick(e, { ...data, title })}\n            onKeyDown={(e) => handleClick(e, { ...data, title })}\n            tabIndex={-1}\n        >\n            <div className=\"details\" role=\"gridcell\">\n                {metaData.roadworksStreet && (\n                    <a\n                        title={metaData.roadworksStreet}\n                        className=\"title\"\n                        href={action}\n                    >\n                        {metaData.roadworksStreet}\n                        {metaData.roadworksStartDate && (\n                            <div className=\"autocomplete-results__metadata\">\n                                <svg className=\"svg-icon\" aria-hidden=\"true\">\n                                    <use href=\"#time\" />\n                                </svg>\n                                {metaData.roadworksStartDate}\n                            </div>\n                        )}\n                        {metaData.roadworksContactTelephoneNumber && (\n                            <div className=\"autocomplete-results__metadata\">\n                                <svg className=\"svg-icon\" aria-hidden=\"true\">\n                                    <use href=\"#phone\" />\n                                </svg>\n                                {metaData.roadworksContactTelephoneNumber}\n                            </div>\n                        )}\n                        {metaData.roadworksLocality && (\n                            <div className=\"autocomplete-results__metadata\">\n                                <svg className=\"svg-icon\" aria-hidden=\"true\">\n                                    <use href=\"#map\" />\n                                </svg>\n                                {metaData.roadworksLocality}\n                            </div>\n                        )}\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default function Roadworks(props) {\n    const { results, selectedIndex } = useStore();\n    const { id, label, className, templateId, childRefs, handleClick } = props;\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            id={`result-row-${id}`}\n            className={[`autocomplete-concierge__section`, className].join(' ')}\n            role=\"rowgroup\"\n        >\n            <h2 className=\"autocomplete-concierge__section-title\">{label}</h2>\n            {results[templateId] &&\n                results[templateId].map((data, index) =>\n                    partial({\n                        data,\n                        index,\n                        handleClick,\n                        selectedIndex,\n                        childRefs,\n                    })\n                )}\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nRoadworks.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n};\n\nRoadworks.defaultProps = {\n    label: ``,\n    className: ``,\n};\n"],"names":["Roadworks","props","results","selectedIndex","useStore","id","label","className","templateId","childRefs","handleClick","length","join","role","map","data","index","action","disp","title","metaData","ref","key","onClick","e","onKeyDown","tabIndex","roadworksStreet","href","roadworksStartDate","roadworksContactTelephoneNumber","roadworksLocality","partial","string","number","func","PropTypes","propTypes","isRequired","defaultProps"],"sourceRoot":""}