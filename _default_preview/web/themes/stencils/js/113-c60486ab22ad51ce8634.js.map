{"version":3,"file":"js/113-c60486ab22ad51ce8634.js","mappings":"8PA6Ce,SAASA,EAAQC,GAC5B,MAAM,GAAEC,EAAF,MAAMC,EAAN,UAAaC,EAAb,WAAwBC,EAAxB,UAAoCC,EAApC,YAA+CC,GAAgBN,GAC/D,QAAEO,EAAF,cAAWC,EAAX,MAA0BC,IAAUC,EAAAA,EAAAA,KAE1C,OAAKH,EAAQH,IAA8C,IAA/BG,EAAQH,GAAYO,OAK5C,uBACIV,GAAE,qBAAgBA,GAClBE,UAAW,CAAC,kCAAmCA,GAAWS,KAAK,KAC/DC,KAAK,OAEL,uBAAKA,KAAK,YACN,sBACIZ,GAAG,gBACHE,UAAU,yCAETD,GAEL,sBACID,GAAE,qBAAgBA,GAClBY,KAAK,UACL,kBAAgB,iBAEfN,EAAQH,IACLG,EAAQH,GAAYU,KAAI,CAACC,EAAMC,IAlEvD,YAOG,IAPc,MACbA,EADa,KAEbD,EAFa,MAGbN,EAHa,cAIbD,EAJa,YAKbF,EALa,UAMbD,GACD,EACC,MAAMY,EAAQ,IAAIC,OAAJ,WAAeT,EAAf,KAAyB,OAG/BU,KAAMC,GAAeL,EAEvBM,EAAO,4BAAH,OAA+BD,EAAWE,QAChDL,EALc,qCAIR,WAOJM,EAAYC,IAAAA,SAAmBH,GAErC,OACI,sBACII,IAAKpB,EACLQ,KAAK,SACL,uBAAeO,GACfnB,GAAE,UAAKe,GACPU,IAAG,kBAAaV,GAChB,gBAAeR,IAAkBQ,EACjCb,UAAU,qDACVwB,QAAUC,GAAMtB,EAAYsB,EAAGR,GAC/BS,UAAYD,GAAMtB,EAAYsB,EAAGR,GACjCU,UAAW,EACXC,wBAAyB,CAAEC,OAAQT,KAiCnBU,CAAQ,CACJjB,QACAD,OACAN,QACAD,gBACAF,cACAD,mBA7BjB,KAsCf,MAAM,OAAE6B,EAAF,OAAUC,EAAV,KAAkBC,GAASC,IAEjCtC,EAAQuC,UAAY,CAChBrC,GAAIiC,EAAOK,WACXrC,MAAOgC,EACP/B,UAAW+B,EACX9B,WAAY+B,EAAOI,WACnBlC,UAAW+B,EAAKG,WAChBjC,YAAa8B,GAGjBrC,EAAQyC,aAAe,CACnBtC,MAAO,GACPC,UAAW,GACXG,YAAa","sources":["webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/organic.jsx"],"sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DOMPurify from 'dompurify';\nimport { useStore } from '../store';\n\nfunction partial({\n    index,\n    data,\n    query,\n    selectedIndex,\n    handleClick,\n    childRefs,\n}) {\n    const regex = new RegExp(`(${query})`, 'gi');\n    const highlight = '<span class=\"highlight\">$1</span>';\n\n    const { disp: suggestion } = data;\n\n    const item = `<span aria-hidden=\"true\">${suggestion.replace(\n        regex,\n        highlight\n    )}</span>`;\n\n    // The 'item' value comes from an external resource so even though normally all\n    // the HTML is generated here and can be trusted the 'item' value cannot.\n    const cleanHtml = DOMPurify.sanitize(item);\n\n    return (\n        <li\n            ref={childRefs}\n            role=\"option\"\n            aria-label={`${suggestion}`}\n            id={`${index}`}\n            key={`organic-${index}`}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item organic\"\n            onClick={(e) => handleClick(e, suggestion)}\n            onKeyDown={(e) => handleClick(e, suggestion)}\n            tabIndex={-1}\n            dangerouslySetInnerHTML={{ __html: cleanHtml }}\n        />\n    );\n}\n\nexport default function Organic(props) {\n    const { id, label, className, templateId, childRefs, handleClick } = props;\n    const { results, selectedIndex, query } = useStore();\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            id={`result-row-${id}`}\n            className={[`autocomplete-concierge__section`, className].join(' ')}\n            role=\"row\"\n        >\n            <div role=\"gridcell\">\n                <h2\n                    id=\"organic-label\"\n                    className=\"autocomplete-concierge__section-title\"\n                >\n                    {label}\n                </h2>\n                <ul\n                    id={`result-row-${id}`}\n                    role=\"listbox\"\n                    aria-labelledby=\"organic-label\"\n                >\n                    {results[templateId] &&\n                        results[templateId].map((data, index) =>\n                            partial({\n                                index,\n                                data,\n                                query,\n                                selectedIndex,\n                                handleClick,\n                                childRefs,\n                            })\n                        )}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nOrganic.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n    handleClick: func,\n};\n\nOrganic.defaultProps = {\n    label: ``,\n    className: ``,\n    handleClick: () => {},\n};\n"],"names":["Organic","props","id","label","className","templateId","childRefs","handleClick","results","selectedIndex","query","useStore","length","join","role","map","data","index","regex","RegExp","disp","suggestion","item","replace","cleanHtml","DOMPurify","ref","key","onClick","e","onKeyDown","tabIndex","dangerouslySetInnerHTML","__html","partial","string","number","func","PropTypes","propTypes","isRequired","defaultProps"],"sourceRoot":""}