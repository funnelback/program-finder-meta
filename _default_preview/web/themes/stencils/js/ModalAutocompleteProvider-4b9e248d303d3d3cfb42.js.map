{"version":3,"file":"js/ModalAutocompleteProvider-4b9e248d303d3d3cfb42.js","mappings":"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","sources":["webpack://Plug-and-Play-Template/./node_modules/aria-hidden/dist/es2015/index.js","webpack://Plug-and-Play-Template/./node_modules/@react-aria/aria-modal-polyfill/dist/module.js","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/data/AutocompleteService.js","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/autocomplete.jsx","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/modal-autocomplete.jsx","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/reducer.js","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/store.jsx","webpack://Plug-and-Play-Template/./src/modules/modal/jsx/modal.jsx","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/ lazy ^\\.\\/.*$ namespace object"],"sourcesContent":["var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (parentNode === void 0) { parentNode = getDefaultParent(originalTarget); }\n    if (markerName === void 0) { markerName = \"data-aria-hidden\"; }\n    var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var keep = (function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    });\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || targets.indexOf(parent) >= 0) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                var attr = node.getAttribute('aria-hidden');\n                var alreadyHidden = attr !== null && attr !== 'false';\n                var counterValue = (counterMap.get(node) || 0) + 1;\n                var markerValue = (markerCounter.get(node) || 0) + 1;\n                counterMap.set(node, counterValue);\n                markerCounter.set(node, markerValue);\n                hiddenNodes.push(node);\n                if (counterValue === 1 && alreadyHidden) {\n                    uncontrolledNodes.set(node, true);\n                }\n                if (markerValue === 1) {\n                    node.setAttribute(markerName, 'true');\n                }\n                if (!alreadyHidden) {\n                    node.setAttribute('aria-hidden', 'true');\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute('aria-hidden');\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n","import {hideOthers as $hRMXz$hideOthers} from \"aria-hidden\";\n\n\nconst $0ba7c906f8d7a5d9$var$currentDocument = typeof document !== 'undefined' ? document : undefined;\nfunction $0ba7c906f8d7a5d9$export$11dddb85aae73809(selector = 'body', { document: document = $0ba7c906f8d7a5d9$var$currentDocument  } = {\n}) {\n    /**\n   * Listen for additions to the child list of the selected element (defaults to body). This is where providers render modal portals.\n   * When one is added, see if there is a modal inside it, if there is, then hide everything else from screen readers.\n   * If there was already a modal open and a new one was added, undo everything that the previous modal had hidden and hide based on the new one.\n   *\n   * If a modal container is removed, then undo the hiding based on the last hide others. Check if there are any other modals still around, and\n   * hide based on the last one added.\n   */ let target = document.querySelector(selector);\n    let config = {\n        childList: true\n    };\n    let modalContainers = [];\n    let undo;\n    let observer = new MutationObserver((mutationRecord)=>{\n        for (let mutation of mutationRecord){\n            if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n                let addNode = Array.from(mutation.addedNodes).find((node)=>{\n                    var ref;\n                    return (ref = node.querySelector) === null || ref === void 0 ? void 0 : ref.call(node, '[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                });\n                if (addNode) {\n                    modalContainers.push(addNode);\n                    let modal = addNode.querySelector('[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                    undo === null || undo === void 0 ? void 0 : undo();\n                    undo = $hRMXz$hideOthers(modal);\n                }\n            } else if (mutation.type === 'childList' && mutation.removedNodes.length > 0) {\n                let removedNodes = Array.from(mutation.removedNodes);\n                let nodeIndexRemove = modalContainers.findIndex((container)=>removedNodes.includes(container)\n                );\n                if (nodeIndexRemove >= 0) {\n                    undo();\n                    modalContainers = modalContainers.filter((val, i)=>i !== nodeIndexRemove\n                    );\n                    if (modalContainers.length > 0) {\n                        let modal = modalContainers[modalContainers.length - 1].querySelector('[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                        undo = $hRMXz$hideOthers(modal);\n                    } else undo = undefined;\n                }\n            }\n        }\n    });\n    observer.observe(target, config);\n    return ()=>{\n        undo === null || undo === void 0 ? void 0 : undo();\n        observer.disconnect();\n    };\n}\n\n\nexport {$0ba7c906f8d7a5d9$export$11dddb85aae73809 as watchModals};\n//# sourceMappingURL=module.js.map\n","/*!\n * @license\n * Copyright Squiz Australia Pty Ltd. All Rights Reserved.\n */\n\n/* eslint-disable import/prefer-default-export */\n\nexport class AutocompleteService {\n    constructor(adapters) {\n        if (!adapters || adapters.length === 0) {\n            throw new Error(\n                `At least one adapter is required for AutocompleteService`\n            );\n        }\n\n        this.autocompleteAdapters = [];\n\n        Array.from(adapters).forEach((adapter) => {\n            // eslint-disable-next-line no-prototype-builtins\n            if (!adapter || !adapter.hasOwnProperty('autocomplete')) {\n                throw new Error(\n                    `${adapter.constructor.name} is not implemented yet`\n                );\n            } else {\n                this.registerAdapter(adapter);\n            }\n        });\n    }\n\n    registerAdapter(adapter) {\n        this.autocompleteAdapters.push(adapter);\n    }\n\n    /**\n     * Get search results.\n     *\n     * @param {string} args query string.\n     * @param {function} mockFn Unit test mock function.\n     *\n     * @returns {Promise<array>} A promised list of search results.\n     */\n    getResults(args, mockFn) {\n        return Promise.all(\n            this.autocompleteAdapters.map((adapter) =>\n                adapter.getResults(args, mockFn)\n            )\n        )\n            .then((result) => {\n                const mappedResults = [];\n                let resultsCount = 0;\n                let i = 0;\n\n                // Match each result with its template id.\n                result.map(({ data }, idx) => {\n                    resultsCount += data.length;\n                    mappedResults[idx] = [];\n                    if (data.length) {\n                        data.forEach((element) => {\n                            // eslint-disable-next-line no-plusplus\n                            mappedResults[idx][i++] = element;\n                        });\n                    }\n                    return mappedResults;\n                });\n\n                return { results: mappedResults, count: resultsCount };\n            })\n            .catch((error) => {\n                /* eslint-disable no-console */\n                console.error(error);\n                return { results: 0, count: 0, error };\n            });\n    }\n}\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable camelcase */\nimport React, {\n    useState,\n    useEffect,\n    useMemo,\n    Suspense,\n    lazy,\n    useRef,\n    useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useKeyboard, useFocusWithin } from '@react-aria/interactions';\nimport { DismissButton } from '@react-aria/overlays';\n\nimport { AutocompleteService } from '../data/AutocompleteService';\nimport { useStore, StoreProvider } from './store';\nimport { initialState, searchReducer } from './reducer';\nimport { useArrayRef, getParam, getTracker } from './helpers';\n\n/**\n * Lazy load result templates. We could not use standard hook to load, as we need to pass array of refs.\n * With memo we caching function but still have ability to rebuild props when refs are changed.\n *\n * @param {object} props Object with props we want to pass into component.\n *\n * @returns {JSX.Element}\n * @constructor\n */\nconst LoadTemplates = (props) => {\n    const { template } = props;\n    const componentName = template.toLowerCase();\n    const DynamicComponent = useMemo(\n        () => lazy(() => import(`./templates/${componentName}`)),\n        []\n    );\n\n    return (\n        <Suspense\n            key={`component-${componentName}`}\n            fallback={<span className=\"sr-only\">Loading template...</span>}\n        >\n            <DynamicComponent {...props} />\n        </Suspense>\n    );\n};\n\n/**\n * Loading indicator.\n *\n * @param {bool} fetching Flag indicating loading state.\n * @param {function} onSubmit Callback function to execute when submit event occur.\n * @param {string} componentId Id of the component.\n *\n * @return {JSX.Element}\n * @constructor\n */\nconst Loader = ({ fetching, onSubmit, componentId }) => {\n    if (fetching) {\n        return (\n            <div className=\"autocomplete-concierge__loader\" aria-hidden=\"true\">\n                <svg className=\"svg-icon\" role=\"img\" focusable={false}>\n                    <use href=\"#spinner\" />\n                </svg>\n            </div>\n        );\n    }\n    return (\n        <button\n            type=\"submit\"\n            className=\"autocomplete-concierge__submit\"\n            onClick={onSubmit}\n            aria-labelledby={`${componentId}-submit-label`}\n        >\n            <svg className=\"svg-icon\" role=\"img\" focusable={false}>\n                <title id={`${componentId}-submit-label`}>Submit search</title>\n                <use href=\"#search\" />\n            </svg>\n        </button>\n    );\n};\n\nfunction Autocomplete(props) {\n    const {\n        id,\n        templates,\n        placeholder,\n        debounce,\n        action,\n        method,\n        hiddenFields,\n        inputAttributes,\n        showSubmit,\n        onClose,\n        showClear,\n        showLoader,\n    } = props;\n\n    const { setSelectedIndex, selectedIndex, count, fetchResults, fetching } =\n        useStore();\n\n    const [activeDescendant, setActiveDescendant] = useState(null);\n    const [submit, setSubmit] = useState(null);\n    const [showResults, setShowResults] = useState(null);\n    const [query, setQuery] = useState(``);\n    const [readerAnnounce, setReaderAnnounce] = useState(``);\n    const [isInputFocused, setIsInputFocused] = useState(false);\n    const [gridClasses, setGridClasses] = useState(\n        `autocomplete-concierge__results`\n    );\n    const [previousCount, setPreviousCount] = useState(count);\n\n    const formRef = useRef();\n    const sliderRef = useRef();\n    const searchBox = useRef(null);\n    const tracker = getTracker();\n\n    const [elements, childRefs] = useArrayRef();\n\n    const { keyboardProps } = useKeyboard({\n        onKeyUp: (e) => {\n            let index = -1;\n            // ESC\n            if (e.keyCode === 27) {\n                setShowResults(false);\n                setSelectedIndex(-1);\n\n                // If second time enter hit we want to call onClose cllaback function, in this example\n                // we will close popover we have autocomplete nested.\n                if (!showResults) {\n                    onClose();\n                }\n\n                if (searchBox.current) {\n                    searchBox.current.focus();\n                }\n                return;\n            }\n            // Down\n            if (e.keyCode === 40) {\n                index = selectedIndex + 1 >= count ? 0 : selectedIndex + 1;\n                // When more items than view can accommodate, we want scroll to follow the button down.\n                if (elements[index]) {\n                    elements[index].scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'nearest',\n                        inline: 'start',\n                    });\n                }\n            }\n            // Up\n            if (e.keyCode === 38) {\n                index = selectedIndex - 1 < 0 ? count - 1 : selectedIndex - 1;\n                // When more items than view can accommodate, we want scroll to follow the button up.\n                if (elements[index]) {\n                    elements[index].scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'nearest',\n                        inline: 'start',\n                    });\n                }\n            }\n            // Enter\n            if (e.keyCode === 13) {\n                // Nothing selected and enter hit we will post form.\n                if (selectedIndex === -1) {\n                    setSubmit(true);\n                    return;\n                }\n\n                // We will fire onClick event when enter hit\n                elements[selectedIndex].click();\n            }\n\n            setSelectedIndex(index);\n            setActiveDescendant(index);\n            setShowResults(count > 0);\n        },\n        onKeyDown: (e) => {\n            // This wil prevent moving cursor on input field when press down or up also stop form from being posted when enter pressed.\n            if (\n                e.keyCode === 40 ||\n                e.keyCode === 38 ||\n                e.keyCode === 13 ||\n                e.keyCode === 27\n            ) {\n                e.preventDefault();\n            } else {\n                // Regain focus on input field when other buttons are entered.\n                searchBox.current.focus();\n            }\n            return false;\n        },\n    });\n\n    // This is to handle clicks outside the combobox.\n    const { focusWithinProps } = useFocusWithin({\n        onFocusWithin: () => {\n            setShowResults(count > 0);\n            setIsInputFocused(true);\n        },\n        onBlurWithin: () => {\n            setShowResults(false);\n        },\n    });\n\n    // Handle slide up and down results combobox.\n    useEffect(() => {\n        const classes = ['autocomplete-concierge__results'];\n        if (fetching && !showResults && previousCount < count) {\n            classes.push('autocomplete-concierge__results--expanding');\n            setGridClasses(classes.join(' '));\n        }\n\n        if (!fetching && showResults && previousCount === count) {\n            classes.push('autocomplete-concierge__results--open');\n            setGridClasses(classes.join(' '));\n        }\n\n        if (!fetching && !showResults) {\n            classes.push('autocomplete-concierge__results--open');\n            classes.push('autocomplete-concierge__results--collapsing');\n            setGridClasses(classes.join(' '));\n        }\n    }, [fetching, previousCount, count, showResults]);\n\n    // On page load update input field with query string.\n    useEffect(() => {\n        const queryParam = getParam(document.location.href, 'query');\n        setQuery(queryParam || ``);\n    }, []);\n\n    // Let the screen readers know we have or not results.\n    useEffect(() => {\n        setShowResults(count > 0);\n        if (!query) {\n            return;\n        }\n        const message =\n            count > 0\n                ? `${count} results for ${query}`\n                : `No results found for ${query}`;\n\n        setReaderAnnounce(message);\n        setPreviousCount(count);\n    }, [count, query]);\n\n    // When query changed we debounce network request.\n    useEffect(() => {\n        const delayDebounceFn = setTimeout(async () => {\n            // When reset query, we will reestablish focus on input field.\n            if (query === ``) {\n                searchBox.current.focus();\n            }\n            await fetchResults(query, templates);\n        }, debounce);\n\n        return () => clearTimeout(delayDebounceFn);\n    }, [query]);\n\n    // This is to handle form submissions including tracker.\n    useEffect(() => {\n        if (submit && formRef.current && searchBox.current) {\n            searchBox.current.value = query;\n            if (tracker) {\n                const trackingEvent = {\n                    TYPE: 'SUBMIT',\n                    title: 'NEEDS_REFRESH',\n                    url: window.location.href,\n                    time: Date.now(),\n                };\n                tracker.trackedEventWithCb(\n                    trackingEvent,\n                    formRef.current.submit()\n                );\n                return;\n            }\n\n            formRef.current.submit();\n        }\n    }, [submit]);\n\n    const handleInputOnChange = ({ currentTarget: { value } }) => {\n        setQuery(value);\n    };\n\n    const trackedClick = (url, title, cb) => {\n        if (tracker) {\n            const trackingEvent = {\n                TYPE: 'CLICK',\n                url,\n                query,\n                title,\n            };\n            tracker.trackedEventWithCb(trackingEvent, cb);\n        }\n        if (cb && !tracker) {\n            cb();\n        }\n    };\n\n    // Standard onClick handler, can be overridden within template component if needed.\n    const handleClick = useCallback((e, data) => {\n        // Hijack's enter button and touch and click events.\n        e.preventDefault();\n\n        // eslint-disable-next-line no-shadow\n        const { action, action_t, title } = data;\n\n        if (action_t === 'Q' || action_t === undefined) {\n            setQuery(action || data);\n            setSubmit(true);\n            return;\n        }\n\n        trackedClick(\n            action,\n            title,\n            // eslint-disable-next-line no-return-assign\n            () => (document.location.href = action)\n        );\n    }, []);\n\n    return (\n        <div\n            className=\"autocomplete-concierge no-wysiwyg\"\n            role=\"search\"\n            {...focusWithinProps}\n        >\n            <form\n                ref={formRef}\n                action={action}\n                method={method}\n                className=\"autocomplete-concierge__form\"\n            >\n                <label\n                    className=\"sr-only\"\n                    aria-live=\"polite\"\n                    id={`${id}-label`}\n                >\n                    {readerAnnounce}\n                </label>\n                {showLoader && (\n                    <Loader\n                        fetching={fetching}\n                        onSubmit={() => setSubmit(true)}\n                        componentId={id}\n                    />\n                )}\n                <input\n                    id={`${id}-inputField`}\n                    ref={searchBox}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    role=\"combobox\"\n                    aria-expanded={isInputFocused && showResults}\n                    aria-haspopup=\"grid\"\n                    aria-labelledby={`${id}-label`}\n                    aria-autocomplete=\"list\"\n                    aria-controls={`${id}-grid`}\n                    aria-activedescendant={\n                        activeDescendant === -1 ? undefined : activeDescendant\n                    }\n                    onChange={handleInputOnChange}\n                    onClick={() => setShowResults(count > 0)}\n                    value={query}\n                    placeholder={placeholder}\n                    className=\"autocomplete-concierge__input\"\n                    name=\"query\"\n                    onKeyDown={(e) => {\n                        // When key down we need to grab focus on container where keyboardProps\n                        // hook is attached to combobox.\n                        if (e.keyCode === 40) {\n                            sliderRef.current.focus();\n                        }\n                    }}\n                    {...inputAttributes}\n                />\n                {hiddenFields &&\n                    hiddenFields.map((el) => (\n                        <input\n                            key={el.id}\n                            type=\"hidden\"\n                            name={el.name}\n                            value={el.value}\n                        />\n                    ))}\n                <button\n                    type=\"button\"\n                    className={[\n                        `autocomplete-concierge__submit`,\n                        !showClear || (showClear && query.length === 0)\n                            ? `hidden`\n                            : ``,\n                    ].join(' ')}\n                    onClick={() => setQuery(``)}\n                    onKeyUp={(e) => {\n                        e.preventDefault();\n                        if (e.keyCode === 13) {\n                            setQuery(``);\n                        }\n                    }}\n                >\n                    <svg className=\"svg-icon\" role=\"img\" focusable={false}>\n                        <title>Clear search</title>\n                        <use href=\"#close\" />\n                    </svg>\n                    Clear\n                </button>\n                {showSubmit && !showLoader && (\n                    <button\n                        type=\"submit\"\n                        className=\"autocomplete-concierge__submit\"\n                        onClick={() => setSubmit(true)}\n                        aria-labelledby={`${id}-submit-label`}\n                    >\n                        <svg className=\"svg-icon\" role=\"img\" focusable={false}>\n                            <title id={`${id}-submit-label`}>\n                                Submit search\n                            </title>\n                            <use href=\"#search\" />\n                        </svg>\n                    </button>\n                )}\n            </form>\n            <div\n                ref={sliderRef}\n                role=\"grid\"\n                aria-labelledby={`${id}-label`}\n                aria-hidden={!showResults}\n                id={`${id}-grid`}\n                className={gridClasses}\n                tabIndex={-1}\n                {...keyboardProps}\n            >\n                {templates &&\n                    templates.map((el, templateId) =>\n                        LoadTemplates({\n                            ...el,\n                            templateId,\n                            handleClick,\n                            trackedClick,\n                            childRefs,\n                        })\n                    )}\n            </div>\n            <DismissButton onDismiss={() => setShowResults(false)} />\n        </div>\n    );\n}\n\nexport default function AutocompleteProvider(props) {\n    const { adapters } = props;\n    const autocompleteService = new AutocompleteService(adapters);\n\n    return (\n        <StoreProvider\n            initialState={initialState}\n            reducer={searchReducer}\n            autocompleteService={autocompleteService}\n        >\n            <Autocomplete {...props} />\n        </StoreProvider>\n    );\n}\n\nconst { string, arrayOf, shape, number, bool, func } = PropTypes;\n\nAutocomplete.propTypes = {\n    id: string,\n    templates: arrayOf(\n        shape({\n            id: string,\n            label: string,\n            template: string,\n            serviceUrl: string,\n            params: string,\n        })\n    ).isRequired,\n    placeholder: string,\n    debounce: number,\n    action: string,\n    method: string,\n    showSubmit: bool,\n    isOpen: bool,\n    onClose: func,\n    showClear: bool,\n    showLoader: bool,\n};\n\nAutocomplete.defaultProps = {\n    id: 'autocomplete-search',\n    placeholder: 'Start your search here...',\n    debounce: 500,\n    action: 'search.html',\n    method: 'GET',\n    showSubmit: true,\n    isOpen: false,\n    onClose: () => {},\n    showClear: false,\n    showLoader: false,\n};\n","import React, { useCallback, useState } from 'react';\nimport uuidv4 from 'PlugAndPlay/_global/js/uuid';\nimport { watchModals } from '@react-aria/aria-modal-polyfill';\nimport { OverlayProvider } from '@react-aria/overlays';\nimport Modal from '../../modal/jsx/modal';\nimport AutocompleteProvider from './autocomplete';\n\n/**\n * Modal version of autocomplete search\n */\nexport default function Autocomplete(props) {\n    const [showAutocomplete, setShowAutocomplete] = useState(false);\n    const handleDialogClose = useCallback(() => {\n        setShowAutocomplete(false);\n    }, []);\n\n    watchModals();\n\n    const titleId = uuidv4(); // Popover needs a id for the dialog described by\n\n    const { adapters } = props;\n\n    return (\n        <OverlayProvider className=\"no-wysiwyg autocomplete-wrapper\">\n            <button\n                type=\"button\"\n                className=\"autocomplete-wrapper__action\"\n                onClick={() => setShowAutocomplete(!showAutocomplete)}\n            >\n                <svg className=\"svg-icon\">\n                    <title>Search</title>\n                    <use href=\"#search\" />\n                </svg>\n            </button>\n            {showAutocomplete && (\n                <Modal\n                    titleId={titleId}\n                    className=\"autocomplete-modal\"\n                    onClose={handleDialogClose}\n                >\n                    <header className=\"autocomplete-modal__header\">\n                        <button\n                            type=\"button\"\n                            onClick={handleDialogClose}\n                            className=\"autocomplete-modal__header-close\"\n                        >\n                            <svg className=\"svg-icon\">\n                                <title>Close modal</title>\n                                <use href=\"#close\" />\n                            </svg>\n                        </button>\n                    </header>\n                    <div className=\"autocomplete-modal__body\">\n                        <AutocompleteProvider\n                            {...props}\n                            adapters={adapters}\n                            onClose={handleDialogClose}\n                        />\n                    </div>\n                </Modal>\n            )}\n        </OverlayProvider>\n    );\n}\n","/* eslint-disable no-console */\n\nexport const UPDATE_QUERY = 'PNP/AUTOCOMPLETE/UPDATE_QUERY';\nexport const UPDATE_RESULTS = 'PNP/AUTOCOMPLETE/UPDATE_RESULTS';\nexport const SET_SELECTED = 'PNP/AUTOCOMPLETE/SET_SELECTED';\nexport const LOAD_REQUEST = 'PNP/AUTOCOMPLETE/LOAD_REQUEST';\nexport const LOAD_FAILED = 'PNP/AUTOCOMPLETE/LOAD_FAILED';\nexport const LOAD_SUCCESS = 'PNP/AUTOCOMPLETE/LOAD_SUCCESS';\n\nexport const initialState = {\n    results: [],\n    count: 0,\n    query: ``,\n    selectedIndex: -1,\n    fetching: false,\n    error: ``,\n};\n\nexport const searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_REQUEST:\n            return {\n                ...state,\n                fetching: true,\n            };\n        case LOAD_FAILED:\n            return {\n                ...state,\n                error: action.error,\n                fetching: false,\n            };\n        case LOAD_SUCCESS:\n            return {\n                ...state,\n                fetching: false,\n            };\n        case UPDATE_RESULTS:\n            return {\n                ...state,\n                results: action.results,\n                count: action.count,\n                query: action.query,\n                selectedIndex: -1,\n            };\n        case SET_SELECTED:\n            return {\n                ...state,\n                selectedIndex: action.selectedIndex,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport const autocompleteContext = (dispatch, service) => ({\n    updateResults: (results, count) => {\n        dispatch({\n            type: UPDATE_RESULTS,\n            results,\n            count,\n        });\n    },\n    setSelectedIndex: (selectedIndex) => {\n        dispatch({\n            type: SET_SELECTED,\n            selectedIndex,\n        });\n    },\n    fetchResults: async (query) => {\n        if (!query) {\n            dispatch({\n                type: UPDATE_RESULTS,\n                results: [],\n                count: 0,\n            });\n            return;\n        }\n        dispatch({\n            type: LOAD_REQUEST,\n        });\n\n        const { results, count, error } = await service.getResults(query);\n\n        if (error) {\n            console.error(\n                `There was an error fetching results from the service.`\n            );\n            console.info(error.message);\n\n            dispatch({\n                type: UPDATE_RESULTS,\n                results: [],\n                count: 0,\n            });\n\n            dispatch({\n                type: LOAD_FAILED,\n                error: error.message,\n            });\n            return;\n        }\n\n        dispatch({\n            type: UPDATE_RESULTS,\n            results,\n            count,\n            query,\n        });\n\n        dispatch({\n            type: LOAD_SUCCESS,\n        });\n    },\n});\n","import React, { useReducer, useContext, createContext, useMemo } from 'react';\nimport { autocompleteContext } from './reducer';\n\nconst Store = createContext();\n\nStore.displayName = 'PNP-STORE';\n\nexport const useStore = () => useContext(Store);\n\nexport const StoreProvider = ({\n    children,\n    initialState,\n    reducer,\n    autocompleteService,\n}) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const autocomplete = useMemo(\n        () => autocompleteContext(dispatch, autocompleteService),\n        []\n    );\n\n    return (\n        <Store.Provider value={{ ...autocomplete, dispatch, ...state }}>\n            {children}\n        </Store.Provider>\n    );\n};\n","/* eslint-disable react/jsx-props-no-spreading */ // Disabled as prop spreading is the documented way to use the @react-aria framework\nimport React, { useEffect } from 'react';\nimport {\n    useOverlay,\n    usePreventScroll,\n    useModal,\n    OverlayContainer,\n} from '@react-aria/overlays';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope, useFocusManager } from '@react-aria/focus';\n\n/**\n * React implementation of the Plug and Play Modal, uses the Adobe @react-aria package\n * to handle the modal / dialog related accessability concerns such as focus movement, focus traps,\n * ESC to close ect.\n *\n * Needs to be wrapped within a <OverlayProvider> to aria hide the application when the modal opens.\n *\n * Comments on @react-aria hooks come directly from their documentation.\n */\nexport default function Modal({\n    titleId,\n    title,\n    onClose,\n    children,\n    className,\n}) {\n    return (\n        <OverlayContainer>\n            <div\n                className={`no-wysiwyg modal-wrapper ${\n                    className ? `${className}-wrapper` : ''\n                }`}\n            >\n                <FocusScope contain restoreFocus autoFocus>\n                    <ModalContent\n                        titleId={titleId}\n                        title={title}\n                        onClose={onClose}\n                        className={className}\n                    >\n                        {children}\n                    </ModalContent>\n                </FocusScope>\n            </div>\n        </OverlayContainer>\n    );\n}\n\nfunction ModalContent({ titleId, title, onClose, children, className }) {\n    // Base settings for @react-aria hooks\n    const settings = {\n        'aria-describedby': titleId,\n        title,\n        onClose,\n        isDismissable: true,\n        isOpen: true,\n    };\n\n    const modalRef = React.useRef();\n    const modalContentRef = React.useRef();\n    const focusManager = useFocusManager();\n\n    /*\n        Provides the behavior for overlays such as dialogs, popovers, and menus. Hides the overlay when\n        the user interacts outside it, when the Escape key is pressed, or optionally, on blur.\n    */\n    const { overlayProps, underlayProps } = useOverlay(\n        settings,\n        modalContentRef\n    );\n\n    /*\n        Prevents scrolling on the document body on mount, and restores it on unmount.\n        Also ensures that content does not shift due to the scrollbars disappearing.\n    */\n    usePreventScroll();\n\n    /*\n        Hides content outside the current <OverlayContainer> from screen readers on mount and restores it on unmount.\n    */\n    const { modalProps } = useModal();\n\n    /*\n        Provides the behavior and accessibility implementation for a dialog component.\n    */\n    const { dialogProps, titleProps } = useDialog(settings, modalContentRef);\n\n    /*\n        Remove the hidden attribute as soon as its drawn to the DOM so it transitions open like\n        the base ES6 modal in the framework.\n    */\n    useEffect(() => {\n        modalRef.current.removeAttribute('hidden');\n        focusManager.focusFirst(); // FocusScope autofocus property wont work due to being hidden so focus first now\n    }, [modalRef]);\n\n    return (\n        <div\n            ref={modalRef}\n            {...underlayProps}\n            hidden\n            className={`modal ${className || ''}`}\n        >\n            <div\n                ref={modalContentRef}\n                {...overlayProps}\n                {...dialogProps}\n                {...modalProps}\n                aria-modal=\"true\"\n                tabIndex=\"-1\"\n                className={`modal__content ${\n                    className ? `${className}__content` : ''\n                }`}\n            >\n                {titleId ? (\n                    ''\n                ) : (\n                    <h2\n                        {...titleProps}\n                        className={`${className ? `${className}__title` : ''}`}\n                    >\n                        {title}\n                    </h2>\n                )}\n                {children}\n            </div>\n        </div>\n    );\n}\n","var map = {\n\t\"./cemetery--v15\": [\n\t\t98938,\n\t\t938\n\t],\n\t\"./cemetery--v15.jsx\": [\n\t\t98938,\n\t\t938\n\t],\n\t\"./cemetery--v16\": [\n\t\t97841,\n\t\t841\n\t],\n\t\"./cemetery--v16.jsx\": [\n\t\t97841,\n\t\t841\n\t],\n\t\"./faqs--v15\": [\n\t\t81524,\n\t\t524\n\t],\n\t\"./faqs--v15.jsx\": [\n\t\t81524,\n\t\t524\n\t],\n\t\"./faqs--v16\": [\n\t\t20080,\n\t\t80\n\t],\n\t\"./faqs--v16.jsx\": [\n\t\t20080,\n\t\t80\n\t],\n\t\"./organic\": [\n\t\t44113,\n\t\t113\n\t],\n\t\"./organic.jsx\": [\n\t\t44113,\n\t\t113\n\t],\n\t\"./people--v15\": [\n\t\t62140,\n\t\t140\n\t],\n\t\"./people--v15.jsx\": [\n\t\t62140,\n\t\t140\n\t],\n\t\"./people--v16\": [\n\t\t12507,\n\t\t507\n\t],\n\t\"./people--v16.jsx\": [\n\t\t12507,\n\t\t507\n\t],\n\t\"./planning_applications--v15\": [\n\t\t53298,\n\t\t298\n\t],\n\t\"./planning_applications--v15.jsx\": [\n\t\t53298,\n\t\t298\n\t],\n\t\"./planning_applications--v16\": [\n\t\t38504,\n\t\t504\n\t],\n\t\"./planning_applications--v16.jsx\": [\n\t\t38504,\n\t\t504\n\t],\n\t\"./programs--v15\": [\n\t\t86588,\n\t\t588\n\t],\n\t\"./programs--v15.jsx\": [\n\t\t86588,\n\t\t588\n\t],\n\t\"./programs--v16\": [\n\t\t32723,\n\t\t723\n\t],\n\t\"./programs--v16.jsx\": [\n\t\t32723,\n\t\t723\n\t],\n\t\"./roadworks--v15\": [\n\t\t75554,\n\t\t554\n\t],\n\t\"./roadworks--v15.jsx\": [\n\t\t75554,\n\t\t554\n\t],\n\t\"./roadworks--v16\": [\n\t\t54563,\n\t\t563\n\t],\n\t\"./roadworks--v16.jsx\": [\n\t\t54563,\n\t\t563\n\t],\n\t\"./services--v15\": [\n\t\t91362,\n\t\t362\n\t],\n\t\"./services--v15.jsx\": [\n\t\t91362,\n\t\t362\n\t],\n\t\"./services--v16 \": [\n\t\t45542,\n\t\t542\n\t],\n\t\"./services--v16 .jsx\": [\n\t\t45542,\n\t\t542\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42276;\nmodule.exports = webpackAsyncContext;"],"names":["counterMap","WeakMap","uncontrolledNodes","markerMap","lockCount","hideOthers","originalTarget","parentNode","markerName","document","Array","isArray","ownerDocument","body","getDefaultParent","targets","markerCounter","hiddenNodes","elementsToKeep","Set","keep","el","has","add","forEach","deep","parent","indexOf","prototype","call","children","node","attr","getAttribute","alreadyHidden","counterValue","get","markerValue","set","push","setAttribute","clear","removeAttribute","delete","$0ba7c906f8d7a5d9$var$currentDocument","undefined","$0ba7c906f8d7a5d9$export$11dddb85aae73809","selector","undo","target","querySelector","modalContainers","observer","MutationObserver","mutationRecord","mutation","type","addedNodes","length","addNode","from","find","ref","modal","removedNodes","nodeIndexRemove","findIndex","container","includes","filter","val","i","observe","childList","disconnect","AutocompleteService","constructor","adapters","Error","this","autocompleteAdapters","adapter","hasOwnProperty","name","registerAdapter","getResults","args","mockFn","Promise","all","map","then","result","mappedResults","resultsCount","idx","data","element","results","count","catch","error","console","Loader","fetching","onSubmit","componentId","className","role","focusable","href","onClick","id","Autocomplete","props","templates","placeholder","debounce","action","method","hiddenFields","inputAttributes","showSubmit","onClose","showClear","showLoader","setSelectedIndex","selectedIndex","fetchResults","useStore","activeDescendant","setActiveDescendant","useState","submit","setSubmit","showResults","setShowResults","query","setQuery","readerAnnounce","setReaderAnnounce","isInputFocused","setIsInputFocused","gridClasses","setGridClasses","previousCount","setPreviousCount","formRef","useRef","sliderRef","searchBox","tracker","getTracker","elements","childRefs","useArrayRef","keyboardProps","useKeyboard","onKeyUp","e","index","keyCode","current","focus","scrollIntoView","behavior","block","inline","click","onKeyDown","preventDefault","focusWithinProps","useFocusWithin","onFocusWithin","onBlurWithin","useEffect","classes","join","queryParam","getParam","location","message","delayDebounceFn","setTimeout","async","clearTimeout","value","trackingEvent","TYPE","title","url","window","time","Date","now","trackedEventWithCb","trackedClick","cb","handleClick","useCallback","action_t","autoComplete","onChange","currentTarget","key","tabIndex","templateId","template","componentName","toLowerCase","DynamicComponent","useMemo","lazy","Suspense","fallback","LoadTemplates","onDismiss","AutocompleteProvider","autocompleteService","initialState","reducer","searchReducer","string","arrayOf","shape","number","bool","func","PropTypes","propTypes","label","serviceUrl","params","isRequired","isOpen","defaultProps","showAutocomplete","setShowAutocomplete","handleDialogClose","watchModals","titleId","uuidv4","UPDATE_RESULTS","SET_SELECTED","LOAD_REQUEST","LOAD_FAILED","LOAD_SUCCESS","state","autocompleteContext","dispatch","service","updateResults","info","Store","createContext","displayName","useContext","StoreProvider","useReducer","autocomplete","Provider","Modal","contain","restoreFocus","autoFocus","ModalContent","settings","isDismissable","modalRef","React","modalContentRef","focusManager","useFocusManager","overlayProps","underlayProps","useOverlay","usePreventScroll","modalProps","useModal","dialogProps","titleProps","useDialog","focusFirst","hidden","webpackAsyncContext","req","__webpack_require__","o","resolve","code","ids","keys","Object","module","exports"],"sourceRoot":""}