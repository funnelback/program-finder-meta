{"version":3,"file":"js/80-c470b26ce66926e129db.js","mappings":"gOAkDe,SAASA,EAAKC,GACzB,MAAM,QAAEC,EAAF,cAAWC,IAAkBC,EAAAA,EAAAA,MAC7B,GAAEC,EAAF,MAAMC,EAAN,UAAaC,EAAb,WAAwBC,EAAxB,UAAoCC,EAApC,YAA+CC,GAAgBT,EAErE,OAAKC,EAAQM,IAA8C,IAA/BN,EAAQM,GAAYG,OAK5C,uBACIN,GAAE,qBAAgBA,GAClBE,UAAW,CAAC,kCAAmCA,GAAWK,KAAK,KAC/DC,KAAK,YAEL,sBAAIN,UAAU,yCAAyCD,GACtDJ,EAAQM,IACLN,EAAQM,GAAYM,KAAI,CAACC,EAAMC,IAtD/C,SAAiBf,GACb,MAAM,KAAEc,EAAF,MAAQC,EAAR,YAAeN,EAAf,cAA4BP,EAA5B,UAA2CM,GAAcR,GACzD,OACFgB,EACAC,MAAM,MAAEC,EAAF,aAASC,IACfL,EAEJ,OACI,uBACIV,GAAE,UAAKW,GACPH,KAAK,MACLQ,IAAKZ,EACLa,IAAG,0BAAqBN,GACxB,gBAAeb,IAAkBa,EACjCT,UAAU,6CACVgB,QAAUC,GAAMd,EAAYc,EAAG,IAAKT,EAAMI,UAC1CM,UAAYD,GAAMd,EAAYc,EAAG,IAAKT,EAAMI,UAC5CO,UAAW,GAEX,uBAAKnB,UAAU,UAAUM,KAAK,YACzBM,GACG,qBAAGA,MAAOA,EAAOZ,UAAU,QAAQoB,KAAMV,GACpCE,EACAC,EAAaQ,WACV,uBAAKrB,UAAU,kCA9B3C,SAAkBsB,GAA0B,IAArBC,EAAqB,uDAAL,IACnC,OAAOD,EAAIlB,OAASmB,EAAb,UACED,EAAIE,UAAU,EAAGD,EAAgB,GADnC,OAEDD,EA4BuBG,CACGZ,EAAaQ,UAAUhB,KAAK,KAC5B,SA4BhBqB,CAAQ,CACJlB,OACAC,QACAN,cACAP,gBACAM,iBAjBT,KAwBf,MAAM,OAAEyB,EAAF,OAAUC,EAAV,KAAkBC,GAASC,IAEjCrC,EAAKsC,UAAY,CACbjC,GAAI6B,EAAOK,WACXjC,MAAO4B,EACP3B,UAAW2B,EACX1B,WAAY2B,EAAOI,WACnB9B,UAAW2B,EAAKG,YAGpBvC,EAAKwC,aAAe,CAChBlC,MAAO,GACPC,UAAW","sources":["webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/faqs--v16.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../store';\n\n// Truncates strings longer than 255 characters so that it does\n// not take up too much space in the user interface.\nfunction truncate(str, numCharacters = 250) {\n    return str.length > numCharacters\n        ? `${str.substring(0, numCharacters - 1)}...`\n        : str;\n}\n\nfunction partial(props) {\n    const { data, index, handleClick, selectedIndex, childRefs } = props;\n    const {\n        action,\n        disp: { title, listMetadata },\n    } = data;\n\n    return (\n        <div\n            id={`${index}`}\n            role=\"row\"\n            ref={childRefs}\n            key={`result-programs-${index}`}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item\"\n            onClick={(e) => handleClick(e, { ...data, title })}\n            onKeyDown={(e) => handleClick(e, { ...data, title })}\n            tabIndex={-1}\n        >\n            <div className=\"details\" role=\"gridcell\">\n                {title && (\n                    <a title={title} className=\"title\" href={action}>\n                        {title}\n                        {listMetadata.faqAnswer && (\n                            <div className=\"autocomplete-results__metadata\">\n                                {truncate(\n                                    listMetadata.faqAnswer.join(','),\n                                    100\n                                )}\n                            </div>\n                        )}\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default function Faqs(props) {\n    const { results, selectedIndex } = useStore();\n    const { id, label, className, templateId, childRefs, handleClick } = props;\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            id={`result-row-${id}`}\n            className={[`autocomplete-concierge__section`, className].join(' ')}\n            role=\"rowgroup\"\n        >\n            <h2 className=\"autocomplete-concierge__section-title\">{label}</h2>\n            {results[templateId] &&\n                results[templateId].map((data, index) =>\n                    partial({\n                        data,\n                        index,\n                        handleClick,\n                        selectedIndex,\n                        childRefs,\n                    })\n                )}\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nFaqs.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n};\n\nFaqs.defaultProps = {\n    label: ``,\n    className: ``,\n};\n"],"names":["Faqs","props","results","selectedIndex","useStore","id","label","className","templateId","childRefs","handleClick","length","join","role","map","data","index","action","disp","title","listMetadata","ref","key","onClick","e","onKeyDown","tabIndex","href","faqAnswer","str","numCharacters","substring","truncate","partial","string","number","func","PropTypes","propTypes","isRequired","defaultProps"],"sourceRoot":""}