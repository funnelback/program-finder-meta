{"version":3,"file":"js/Credits-e87c7b2cce4ff9c0ba5f.js","mappings":"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","sources":["webpack://Plug-and-Play-Template/./node_modules/aria-hidden/dist/es2015/index.js","webpack://Plug-and-Play-Template/./node_modules/@react-aria/aria-modal-polyfill/dist/module.js","webpack://Plug-and-Play-Template/./node_modules/@react-aria/button/dist/module.js","webpack://Plug-and-Play-Template/./src/modules/edify-credits/jsx/creditBalance.jsx","webpack://Plug-and-Play-Template/./src/modules/edify-credits/jsx/credits.jsx","webpack://Plug-and-Play-Template/./src/modules/popover/jsx/popover.jsx"],"sourcesContent":["var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (parentNode === void 0) { parentNode = getDefaultParent(originalTarget); }\n    if (markerName === void 0) { markerName = \"data-aria-hidden\"; }\n    var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var keep = (function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    });\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || targets.indexOf(parent) >= 0) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                var attr = node.getAttribute('aria-hidden');\n                var alreadyHidden = attr !== null && attr !== 'false';\n                var counterValue = (counterMap.get(node) || 0) + 1;\n                var markerValue = (markerCounter.get(node) || 0) + 1;\n                counterMap.set(node, counterValue);\n                markerCounter.set(node, markerValue);\n                hiddenNodes.push(node);\n                if (counterValue === 1 && alreadyHidden) {\n                    uncontrolledNodes.set(node, true);\n                }\n                if (markerValue === 1) {\n                    node.setAttribute(markerName, 'true');\n                }\n                if (!alreadyHidden) {\n                    node.setAttribute('aria-hidden', 'true');\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute('aria-hidden');\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n","import {hideOthers as $hRMXz$hideOthers} from \"aria-hidden\";\n\n\nconst $0ba7c906f8d7a5d9$var$currentDocument = typeof document !== 'undefined' ? document : undefined;\nfunction $0ba7c906f8d7a5d9$export$11dddb85aae73809(selector = 'body', { document: document = $0ba7c906f8d7a5d9$var$currentDocument  } = {\n}) {\n    /**\n   * Listen for additions to the child list of the selected element (defaults to body). This is where providers render modal portals.\n   * When one is added, see if there is a modal inside it, if there is, then hide everything else from screen readers.\n   * If there was already a modal open and a new one was added, undo everything that the previous modal had hidden and hide based on the new one.\n   *\n   * If a modal container is removed, then undo the hiding based on the last hide others. Check if there are any other modals still around, and\n   * hide based on the last one added.\n   */ let target = document.querySelector(selector);\n    let config = {\n        childList: true\n    };\n    let modalContainers = [];\n    let undo;\n    let observer = new MutationObserver((mutationRecord)=>{\n        for (let mutation of mutationRecord){\n            if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n                let addNode = Array.from(mutation.addedNodes).find((node)=>{\n                    var ref;\n                    return (ref = node.querySelector) === null || ref === void 0 ? void 0 : ref.call(node, '[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                });\n                if (addNode) {\n                    modalContainers.push(addNode);\n                    let modal = addNode.querySelector('[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                    undo === null || undo === void 0 ? void 0 : undo();\n                    undo = $hRMXz$hideOthers(modal);\n                }\n            } else if (mutation.type === 'childList' && mutation.removedNodes.length > 0) {\n                let removedNodes = Array.from(mutation.removedNodes);\n                let nodeIndexRemove = modalContainers.findIndex((container)=>removedNodes.includes(container)\n                );\n                if (nodeIndexRemove >= 0) {\n                    undo();\n                    modalContainers = modalContainers.filter((val, i)=>i !== nodeIndexRemove\n                    );\n                    if (modalContainers.length > 0) {\n                        let modal = modalContainers[modalContainers.length - 1].querySelector('[aria-modal=\"true\"], [data-ismodal=\"true\"]');\n                        undo = $hRMXz$hideOthers(modal);\n                    } else undo = undefined;\n                }\n            }\n        }\n    });\n    observer.observe(target, config);\n    return ()=>{\n        undo === null || undo === void 0 ? void 0 : undo();\n        observer.disconnect();\n    };\n}\n\n\nexport {$0ba7c906f8d7a5d9$export$11dddb85aae73809 as watchModals};\n//# sourceMappingURL=module.js.map\n","import {mergeProps as $cE0pI$mergeProps, filterDOMProps as $cE0pI$filterDOMProps, chain as $cE0pI$chain} from \"@react-aria/utils\";\nimport {useFocusable as $cE0pI$useFocusable} from \"@react-aria/focus\";\nimport {usePress as $cE0pI$usePress} from \"@react-aria/interactions\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $701a24aa0da5b062$exports = {};\n\n$parcel$export($701a24aa0da5b062$exports, \"useButton\", () => $701a24aa0da5b062$export$ea18c227d4417cc3);\n\n\n\n\nfunction $701a24aa0da5b062$export$ea18c227d4417cc3(props, ref) {\n    let { elementType: elementType = 'button' , isDisabled: isDisabled , onPress: onPress , onPressStart: onPressStart , onPressEnd: onPressEnd , onPressChange: onPressChange , preventFocusOnPress: // @ts-ignore - undocumented\n    preventFocusOnPress , allowFocusWhenDisabled: // @ts-ignore - undocumented\n    allowFocusWhenDisabled , // @ts-ignore\n    onClick: deprecatedOnClick , href: href , target: target , rel: rel , type: type = 'button'  } = props;\n    let additionalProps;\n    if (elementType === 'button') additionalProps = {\n        type: type,\n        disabled: isDisabled\n    };\n    else additionalProps = {\n        role: 'button',\n        tabIndex: isDisabled ? undefined : 0,\n        href: elementType === 'a' && isDisabled ? undefined : href,\n        target: elementType === 'a' ? target : undefined,\n        type: elementType === 'input' ? type : undefined,\n        disabled: elementType === 'input' ? isDisabled : undefined,\n        'aria-disabled': !isDisabled || elementType === 'input' ? undefined : isDisabled,\n        rel: elementType === 'a' ? rel : undefined\n    };\n    let { pressProps: pressProps , isPressed: isPressed  } = $cE0pI$usePress({\n        onPressStart: onPressStart,\n        onPressEnd: onPressEnd,\n        onPressChange: onPressChange,\n        onPress: onPress,\n        isDisabled: isDisabled,\n        preventFocusOnPress: preventFocusOnPress,\n        ref: ref\n    });\n    let { focusableProps: focusableProps  } = $cE0pI$useFocusable(props, ref);\n    if (allowFocusWhenDisabled) focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;\n    let buttonProps = $cE0pI$mergeProps(focusableProps, pressProps, $cE0pI$filterDOMProps(props, {\n        labelable: true\n    }));\n    return {\n        isPressed: isPressed,\n        buttonProps: $cE0pI$mergeProps(additionalProps, buttonProps, {\n            'aria-haspopup': props['aria-haspopup'],\n            'aria-expanded': props['aria-expanded'],\n            'aria-controls': props['aria-controls'],\n            'aria-pressed': props['aria-pressed'],\n            onClick: (e)=>{\n                if (deprecatedOnClick) {\n                    deprecatedOnClick(e);\n                    console.warn('onClick is deprecated, please use onPress');\n                }\n            }\n        })\n    };\n}\n\n\nvar $55f54f7887471b58$exports = {};\n\n$parcel$export($55f54f7887471b58$exports, \"useToggleButton\", () => $55f54f7887471b58$export$51e84d46ca0bc451);\n\n\n\nfunction $55f54f7887471b58$export$51e84d46ca0bc451(props, state, ref) {\n    const { isSelected: isSelected  } = state;\n    const { isPressed: isPressed , buttonProps: buttonProps  } = $701a24aa0da5b062$export$ea18c227d4417cc3({\n        ...props,\n        onPress: $cE0pI$chain(state.toggle, props.onPress)\n    }, ref);\n    return {\n        isPressed: isPressed,\n        buttonProps: $cE0pI$mergeProps(buttonProps, {\n            'aria-pressed': isSelected\n        })\n    };\n}\n\n\n\n\nexport {$701a24aa0da5b062$export$ea18c227d4417cc3 as useButton, $55f54f7887471b58$export$51e84d46ca0bc451 as useToggleButton};\n//# sourceMappingURL=module.js.map\n","import React from 'react';\nimport { format } from 'date-fns';\n\nexport default function CreditBalance({\n    balances,\n    transactions,\n    type,\n    label,\n    lowThreshold,\n    showRecentTransactions,\n    addCreditLink,\n    allTransactionsLink,\n    closeModal,\n    popover,\n}) {\n    const typeBalance = balances[type] || 'NaN';\n    const typeTransactions = showRecentTransactions\n        ? transactions[type] || []\n        : [];\n    const lowBalance = parseFloat(typeBalance) < lowThreshold;\n\n    // Create our number formatter.\n    const currencyFormatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n\n    return (\n        <div className=\"credit\">\n            <div className=\"credit-balance\">\n                <div className=\"credit-balance__header\">\n                    {`${label} Balance`}{' '}\n                    {popover && (\n                        <button\n                            className=\"credit-balance__header-button\"\n                            type=\"button\"\n                            onClick={closeModal}\n                        >\n                            <span className=\"sr-only\">Close</span>\n                            <svg className=\"credit-balance__header-button-icon\">\n                                <use href=\"#close\" />\n                            </svg>\n                        </button>\n                    )}\n                </div>\n                <div\n                    className={`credit-balance__balance ${\n                        lowBalance ? 'credit-balance__balance--low' : ''\n                    }`}\n                >\n                    <div className=\"credit-balance__balance-amount\">\n                        {currencyFormatter.format(typeBalance)}\n                        {lowBalance && (\n                            <div className=\"credit-balance__balance-amount-low\">\n                                <svg className=\"svg-icon svg-icon--small\">\n                                    <title>Warning</title>\n                                    <use href=\"#warning\" />\n                                </svg>\n                                Low balance\n                            </div>\n                        )}\n                    </div>\n                    {addCreditLink && (\n                        <a\n                            href={addCreditLink}\n                            className=\"credit-balance__balance-add\"\n                        >\n                            <svg\n                                aria-hidden\n                                className=\"svg-icon svg-icon--small\"\n                            >\n                                <use href=\"#add-alt\" />\n                            </svg>\n                            Add more balance\n                        </a>\n                    )}\n                </div>\n                {showRecentTransactions && typeTransactions.length > 0 && (\n                    <div className=\"credit-balance__transactions\">\n                        <ul className=\"credit-balance__transactions-list\">\n                            {typeTransactions.map(\n                                ({\n                                    id,\n                                    label: transactionlabel,\n                                    amount,\n                                    date,\n                                }) => {\n                                    return (\n                                        <li\n                                            key={id}\n                                            className=\"credit-transaction\"\n                                        >\n                                            <div className=\"credit-transaction__details\">\n                                                <div className=\"credit-transaction__label\">\n                                                    {transactionlabel}\n                                                </div>\n                                                {date && (\n                                                    <div className=\"credit-transaction__date\">\n                                                        {format(\n                                                            date,\n                                                            'dd MMM, yyyy, h:mmaaa'\n                                                        )}\n                                                    </div>\n                                                )}\n                                            </div>\n                                            <div className=\"credit-transaction__amount\">\n                                                {currencyFormatter.format(\n                                                    amount\n                                                )}\n                                            </div>\n                                        </li>\n                                    );\n                                }\n                            )}\n                        </ul>\n                        {allTransactionsLink && (\n                            <a\n                                href={allTransactionsLink}\n                                className=\"credit-balance__all-transactions\"\n                            >\n                                <svg className=\"svg-icon svg-icon--small\">\n                                    <title>External link</title>\n                                    <use href=\"#external\" />\n                                </svg>\n                                See all transactions\n                            </a>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { useContext, useEffect } from 'react';\nimport uuidv4 from 'PlugAndPlay/_global/js/uuid';\nimport { watchModals } from '@react-aria/aria-modal-polyfill';\nimport { OverlayProvider } from '@react-aria/overlays';\n\nimport CreditContext from './data/CreditContext';\nimport Popover from '../../popover/jsx/popover';\n\nimport CreditBalance from './creditBalance';\n\n/**\n * Credits Application\n */\nexport default function Credits({\n    popover = false,\n    summaryMode = false,\n    balanceTypes,\n}) {\n    const { balances, getBalances, transactions, getTransactions } =\n        useContext(CreditContext);\n\n    // Initial data load\n    useEffect(() => {\n        // Get the balances for the types the app has been configured to display\n        getBalances(balanceTypes.map((balanceType) => balanceType.type));\n    }, [balanceTypes]);\n\n    // Initial data load\n    useEffect(() => {\n        if (!summaryMode) {\n            // Get the balances for the types the app has been configured to display\n            // But filter down to only those types that have been configured to show the recent transactions\n            getTransactions(\n                balanceTypes\n                    .filter((balanceType) => balanceType.showRecentTransactions)\n                    .map((balanceType) => balanceType.type)\n            );\n        }\n    }, [summaryMode, balanceTypes]);\n\n    watchModals();\n\n    return (\n        <OverlayProvider className=\"no-wysiwyg credits-wrapper\">\n            {balanceTypes.map((balanceConfig) => {\n                // If in popover mode, wrap it in a Popover object\n                if (popover) {\n                    const titleId = uuidv4(); // Popover needs a id for the dialog described by\n\n                    return (\n                        <Popover\n                            key={balanceConfig.type}\n                            titleId={titleId}\n                            trigger={({ props, ref }) => {\n                                return (\n                                    <button\n                                        ref={ref}\n                                        {...props}\n                                        type=\"button\"\n                                        className=\"credits-wrapper__action\"\n                                    >\n                                        <svg className=\"svg-icon\">\n                                            <title>\n                                                {`View ${balanceConfig.type} balance`}\n                                            </title>\n                                            <use\n                                                href={`#${balanceConfig.icon}`}\n                                            />\n                                        </svg>\n                                    </button>\n                                );\n                            }}\n                            className=\"credits-popover\"\n                        >\n                            <CreditBalance\n                                popover\n                                {...balanceConfig}\n                                balances={balances}\n                                transactions={transactions}\n                            />\n                        </Popover>\n                    );\n                }\n\n                // Else return just the content\n                return (\n                    <CreditBalance\n                        popover={false}\n                        key={balanceConfig.type}\n                        {...balanceConfig}\n                        balances={balances}\n                        transactions={transactions}\n                    />\n                );\n            })}\n        </OverlayProvider>\n    );\n}\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    OverlayContainer,\n    DismissButton,\n    useOverlayTrigger,\n    useOverlayPosition,\n    useOverlay,\n    useModal,\n} from '@react-aria/overlays';\nimport { useButton } from '@react-aria/button';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { mergeProps } from '@react-aria/utils';\n\nimport '../css/_global.scss';\n\nconst OTHER_OVERLAY_CONTAINER_OPEN =\n    '[data-overlay-container]:not([aria-hidden=\"true\"])';\nconst AIRA_HIDDEN = '[aria-hidden=\"true\"]';\n\nconst PopoverContent = React.forwardRef(\n    (\n        {\n            triggerRef,\n            titleId,\n            title,\n            children,\n            isOpen,\n            onClose,\n            className,\n            ...otherProps\n        },\n        ref\n    ) => {\n        // Handle interacting outside the dialog and pressing the Escape key to close the modal.\n        const { overlayProps } = useOverlay(\n            {\n                onClose,\n                isOpen,\n                isDismissable: true,\n                shouldCloseOnInteractOutside: (element) => {\n                    /*\n                        Framework tries to cancels all events on the basis that there is an 'overlay' showing\n                        which should swallow the events, except it doesnt work consistently and will allow most\n                        onClick bound events though and only block other usage from the @react-aria framework\n                        like other popover openers.\n                    */\n\n                    // If content within the popover has cause ANOTHER overlay to open we dont want to close\n                    // this one just because its being interacted with somehow.\n                    if (\n                        element.closest(OTHER_OVERLAY_CONTAINER_OPEN) &&\n                        !element.closest(AIRA_HIDDEN)\n                    ) {\n                        return false;\n                    }\n\n                    // If the click is on the popover trigger just let it through so the popover doesnt re-open itself\n                    if (triggerRef.current.contains(element)) {\n                        return true;\n                    }\n\n                    onClose(); // Close the popover\n                    return false; // But let the click / press event cascade\n                },\n            },\n            ref\n        );\n\n        // Hide content outside the modal from screen readers.\n        const { modalProps } = useModal();\n\n        // Get props for the dialog and its title\n        const { dialogProps, titleProps } = useDialog(\n            { 'aria-describedby': titleId },\n            ref\n        );\n\n        return (\n            <FocusScope contain restoreFocus>\n                <div\n                    {...mergeProps(\n                        overlayProps,\n                        dialogProps,\n                        otherProps,\n                        modalProps\n                    )}\n                    ref={ref}\n                    className={`popover__dialog ${className}__dialog`}\n                >\n                    {/* Include a title only if a titleId is not provided */}\n                    {titleId ? (\n                        ''\n                    ) : (\n                        <h2\n                            {...titleProps}\n                            className={`popover__title ${className}__title`}\n                        >\n                            {title}\n                        </h2>\n                    )}\n\n                    {children}\n                    <DismissButton onDismiss={onClose} />\n                </div>\n            </FocusScope>\n        );\n    }\n);\n\n/**\n * Create an ARIA / WCAG compatable popover using @react-aria\n * Modified from: https://react-spectrum.adobe.com/react-aria/useOverlayTrigger.html\n *\n * @param {string} titleId - (optional) Id of an element in the children element to act as dialog title; if not provided 'title' must be.\n * @param {string} title - (optional) Title of the dialog; if not provided 'titleId' must be.\n * @param {function} trigger - Callback function to generate the trigger button for the popover\n * @param {string} className - Class to pre-pend to all internal className definitions\n * @param {string} children - Content of the Popover\n * @returns {JSX.Element}\n */\nexport default function Popover({\n    titleId,\n    title,\n    placement,\n    trigger,\n    className,\n    children,\n}) {\n    // Implementing useOverlayTriggerState so i dont have to add another dependency\n    const [isOpen, setIsOpen] = useState(false);\n\n    const triggerRef = React.useRef();\n    const overlayRef = React.useRef();\n\n    // Get props for the trigger and overlay. This also handles hiding the overlay when a parent element of the trigger scrolls (which invalidates the popover positioning).\n    const { triggerProps, overlayProps } = useOverlayTrigger(\n        { type: 'dialog' },\n        {\n            isOpen,\n        },\n        triggerRef\n    );\n\n    // Get popover positioning props relative to the trigger\n    const { overlayProps: positionProps } = useOverlayPosition({\n        targetRef: triggerRef,\n        overlayRef,\n        placement: placement || 'bottom right',\n        offset: 5,\n        isOpen,\n    });\n\n    // Let the CSS and template decide the correct z-index\n    delete positionProps.style.zIndex;\n\n    // Move properties into CSS variables to make altering them easier\n    // eslint-disable-next-line no-restricted-syntax\n    for (const [key, value] of Object.entries(positionProps.style)) {\n        // eslint-disable-next-line no-restricted-globals\n        positionProps.style[`--popover-${key}`] = !isNaN(value)\n            ? `${value}px`\n            : value;\n\n        delete positionProps.style[key];\n    }\n\n    const { buttonProps } = useButton(\n        {\n            onPress: () => setIsOpen(true),\n        },\n        triggerRef\n    );\n\n    // Get the trigger element from the parent\n    const triggerElement = trigger({\n        props: { ...mergeProps(buttonProps, triggerProps) },\n        ref: triggerRef,\n    });\n\n    return (\n        <>\n            {triggerElement}\n            {isOpen && (\n                <OverlayContainer className={`popover ${className}`}>\n                    <PopoverContent\n                        {...overlayProps}\n                        {...positionProps}\n                        ref={overlayRef}\n                        triggerRef={triggerRef}\n                        titleId={titleId}\n                        title={title}\n                        isOpen\n                        onClose={() => {\n                            setIsOpen(false);\n                        }}\n                        className={className}\n                    >\n                        {/* Clone the children so we can pass the closeModal function to them */}\n                        {cloneElement(children, {\n                            closeModal: () => setIsOpen(false),\n                        })}\n                    </PopoverContent>\n                </OverlayContainer>\n            )}\n        </>\n    );\n}\n\nPopover.propTypes = {\n    titleId: PropTypes.string,\n    title: PropTypes.string,\n    trigger: PropTypes.func,\n    className: PropTypes.string,\n};\n\nPopover.defaultProps = {\n    titleId: '',\n    title: 'popover',\n    trigger: ({ props, ref }) => {\n        return (\n            <button {...props} ref={ref}>\n                Open popover\n            </button>\n        );\n    },\n    className: 'popover',\n};\n"],"names":["counterMap","WeakMap","uncontrolledNodes","markerMap","lockCount","hideOthers","originalTarget","parentNode","markerName","document","Array","isArray","ownerDocument","body","getDefaultParent","targets","markerCounter","hiddenNodes","elementsToKeep","Set","keep","el","has","add","forEach","deep","parent","indexOf","prototype","call","children","node","attr","getAttribute","alreadyHidden","counterValue","get","markerValue","set","push","setAttribute","clear","removeAttribute","delete","$0ba7c906f8d7a5d9$var$currentDocument","undefined","$0ba7c906f8d7a5d9$export$11dddb85aae73809","selector","undo","target","querySelector","modalContainers","observer","MutationObserver","mutationRecord","mutation","type","addedNodes","length","addNode","from","find","ref","modal","removedNodes","nodeIndexRemove","findIndex","container","includes","filter","val","i","observe","childList","disconnect","$parcel$export","e","n","v","s","Object","defineProperty","enumerable","configurable","$701a24aa0da5b062$export$ea18c227d4417cc3","props","additionalProps","elementType","isDisabled","onPress","onPressStart","onPressEnd","onPressChange","preventFocusOnPress","allowFocusWhenDisabled","onClick","deprecatedOnClick","href","rel","disabled","role","tabIndex","pressProps","isPressed","focusableProps","buttonProps","labelable","console","warn","$55f54f7887471b58$export$51e84d46ca0bc451","state","isSelected","toggle","CreditBalance","balances","transactions","label","lowThreshold","showRecentTransactions","addCreditLink","allTransactionsLink","closeModal","popover","typeBalance","typeTransactions","lowBalance","parseFloat","currencyFormatter","Intl","NumberFormat","style","currency","className","format","map","id","transactionlabel","amount","date","key","Credits","summaryMode","balanceTypes","getBalances","getTransactions","useContext","CreditContext","useEffect","balanceType","watchModals","balanceConfig","titleId","uuidv4","trigger","icon","PopoverContent","React","triggerRef","title","isOpen","onClose","otherProps","overlayProps","useOverlay","isDismissable","shouldCloseOnInteractOutside","element","closest","current","contains","modalProps","useModal","dialogProps","titleProps","useDialog","contain","restoreFocus","mergeProps","onDismiss","Popover","placement","setIsOpen","useState","overlayRef","triggerProps","useOverlayTrigger","positionProps","useOverlayPosition","targetRef","offset","zIndex","value","entries","isNaN","useButton","triggerElement","cloneElement","propTypes","PropTypes","defaultProps"],"sourceRoot":""}