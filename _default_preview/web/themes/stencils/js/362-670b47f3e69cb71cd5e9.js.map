{"version":3,"file":"js/362-670b47f3e69cb71cd5e9.js","mappings":"uNAkDe,SAASA,EAASC,GAC7B,MAAM,QAAEC,EAAO,cAAEC,IAAkBC,EAAAA,EAAAA,MAC7B,GAAEC,EAAE,MAAEC,EAAK,UAAEC,EAAS,WAAEC,EAAU,UAAEC,EAAS,YAAEC,GAAgBT,EAErE,OAAKC,EAAQM,IAA8C,IAA/BN,EAAQM,GAAYG,OAK5C,uBAAKN,GAAK,cAAaA,IAAME,UAAW,CAAE,kCAAkCA,GAAWK,KAAK,KAAMC,KAAK,YACnG,sBAAIN,UAAU,yCAAyCD,GACtDJ,EAAQM,IACLN,EAAQM,GAAYM,KAAI,CAACC,EAAMC,IA1D/C,SAAiBf,GACb,MAAM,KAAEc,EAAI,MAAEC,EAAK,YAAEN,EAAW,cAAEP,EAAa,UAAEM,GAAcR,GACzD,OACFgB,EACAC,MAAM,MAAEC,EAAK,SAAEC,IACfL,EAEJ,OACI,uBACIV,GAAK,GAAEW,IACPH,KAAK,MACLQ,IAAKZ,EACLa,IAAM,mBAAkBN,IACxB,gBAAeb,IAAkBa,EACjCT,UAAU,6CACVgB,QAAUC,GAAMd,EAAYc,EAAG,IAAKT,EAAMI,UAC1CM,UAAYD,GAAMd,EAAYc,EAAG,IAAKT,EAAMI,UAC5CO,UAAW,GAEX,uBAAKnB,UAAU,gCAAgCM,KAAK,YAChD,qBAAGM,MAAOA,EAAOZ,UAAU,8BAA8BoB,KAAMV,GAC1DE,EAEAC,EAASQ,iBACN,uBAAKrB,UAAU,kCACX,uBAAKA,UAAU,sCAAsC,cAAY,QAC7D,uBAAKoB,KAAK,eAEbP,EAASQ,iBAIjBR,EAASS,gBACN,uBAAKtB,UAAU,kCACX,uBAAKA,UAAU,sCAAsC,cAAY,QAC7D,uBAAKoB,KAAK,UAEbP,EAASS,kBAOtC,CAeoBC,CAAQ,CACJf,OACAC,QACAN,cACAP,gBACAM,iBAbT,IAkBf,CAEA,MAAM,OAAEsB,EAAM,OAAEC,EAAM,KAAEC,GAASC,IAEjClC,EAASmC,UAAY,CACjB9B,GAAI0B,EAAOK,WACX9B,MAAOyB,EACPxB,UAAWwB,EACXvB,WAAYwB,EAAOI,WACnB3B,UAAWwB,EAAKG,YAGpBpC,EAASqC,aAAe,CACpB/B,MAAQ,GACRC,UAAY,G","sources":["webpack://template-stencils/./src/modules/autocomplete-concierge/jsx/templates/services--v15.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../StoreProvider';\n\nfunction partial(props) {\n    const { data, index, handleClick, selectedIndex, childRefs } = props;\n    const {\n        action,\n        disp: { title, metaData },\n    } = data;\n\n    return (\n        <div\n            id={`${index}`}\n            role=\"row\"\n            ref={childRefs}\n            key={`result-programs-${index}`}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item\"\n            onClick={(e) => handleClick(e, { ...data, title })}\n            onKeyDown={(e) => handleClick(e, { ...data, title })}\n            tabIndex={-1}\n        >\n            <div className=\"autocomplete-results__details\" role=\"gridcell\">\n                <a title={title} className=\"autocomplete-results__title\" href={action}>\n                    {title}\n\n                    {metaData.serviceLocality && (\n                        <div className=\"autocomplete-results__metadata\">\n                            <svg className=\"svg-icon autocomplete-results__icon\" aria-hidden=\"true\">\n                                <use href=\"#building\" />\n                            </svg>\n                            {metaData.serviceLocality}\n                        </div>\n                    )}\n\n                    {metaData.serviceAddress && (\n                        <div className=\"autocomplete-results__metadata\">\n                            <svg className=\"svg-icon autocomplete-results__icon\" aria-hidden=\"true\">\n                                <use href=\"#map\" />\n                            </svg>\n                            {metaData.serviceAddress}\n                        </div>\n                    )}\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default function Services(props) {\n    const { results, selectedIndex } = useStore();\n    const { id, label, className, templateId, childRefs, handleClick } = props;\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div id={`result-row-${id}`} className={[`autocomplete-concierge__section`, className].join(' ')} role=\"rowgroup\">\n            <h2 className=\"autocomplete-concierge__section-title\">{label}</h2>\n            {results[templateId] &&\n                results[templateId].map((data, index) =>\n                    partial({\n                        data,\n                        index,\n                        handleClick,\n                        selectedIndex,\n                        childRefs,\n                    })\n                )}\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nServices.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n};\n\nServices.defaultProps = {\n    label: ``,\n    className: ``,\n};\n"],"names":["Services","props","results","selectedIndex","useStore","id","label","className","templateId","childRefs","handleClick","length","join","role","map","data","index","action","disp","title","metaData","ref","key","onClick","e","onKeyDown","tabIndex","href","serviceLocality","serviceAddress","partial","string","number","func","PropTypes","propTypes","isRequired","defaultProps"],"sourceRoot":""}